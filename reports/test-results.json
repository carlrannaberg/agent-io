
> agent-stream-fmt@0.0.1 test
> vitest --run --reporter=json

{"numTotalTestSuites":201,"numPassedTestSuites":201,"numFailedTestSuites":0,"numPendingTestSuites":0,"numTotalTests":451,"numPassedTests":404,"numFailedTests":47,"numPendingTests":0,"numTodoTests":0,"startTime":1752838807867,"success":false,"testResults":[{"assertionResults":[{"ancestorTitles":["","Type guards"],"fullName":" Type guards correctly identifies message events","status":"passed","title":"correctly identifies message events","duration":2,"failureMessages":[]},{"ancestorTitles":["","Type guards"],"fullName":" Type guards correctly identifies tool events","status":"passed","title":"correctly identifies tool events","duration":0,"failureMessages":[]},{"ancestorTitles":["","Type guards"],"fullName":" Type guards correctly identifies cost events","status":"passed","title":"correctly identifies cost events","duration":0,"failureMessages":[]},{"ancestorTitles":["","Type guards"],"fullName":" Type guards correctly identifies error events","status":"passed","title":"correctly identifies error events","duration":1,"failureMessages":[]},{"ancestorTitles":["","Type guards"],"fullName":" Type guards correctly identifies debug events","status":"passed","title":"correctly identifies debug events","duration":0,"failureMessages":[]},{"ancestorTitles":["","Type guards"],"fullName":" Type guards provides proper type narrowing for message events","status":"passed","title":"provides proper type narrowing for message events","duration":0,"failureMessages":[]},{"ancestorTitles":["","Type guards"],"fullName":" Type guards provides proper type narrowing for tool events","status":"passed","title":"provides proper type narrowing for tool events","duration":0,"failureMessages":[]},{"ancestorTitles":["","Type guards"],"fullName":" Type guards provides proper type narrowing for cost events","status":"passed","title":"provides proper type narrowing for cost events","duration":0,"failureMessages":[]},{"ancestorTitles":["","Type guards"],"fullName":" Type guards provides proper type narrowing for error events","status":"passed","title":"provides proper type narrowing for error events","duration":0,"failureMessages":[]},{"ancestorTitles":["","Type guards"],"fullName":" Type guards provides proper type narrowing for debug events","status":"passed","title":"provides proper type narrowing for debug events","duration":0,"failureMessages":[]},{"ancestorTitles":["","Event types"],"fullName":" Event types allows valid message events","status":"passed","title":"allows valid message events","duration":1,"failureMessages":[]},{"ancestorTitles":["","Event types"],"fullName":" Event types allows valid tool events","status":"passed","title":"allows valid tool events","duration":0,"failureMessages":[]},{"ancestorTitles":["","Event types"],"fullName":" Event types allows valid cost events","status":"passed","title":"allows valid cost events","duration":0,"failureMessages":[]},{"ancestorTitles":["","Event types"],"fullName":" Event types allows valid error events","status":"passed","title":"allows valid error events","duration":0,"failureMessages":[]},{"ancestorTitles":["","Event types"],"fullName":" Event types allows valid debug events","status":"passed","title":"allows valid debug events","duration":0,"failureMessages":[]}],"startTime":1752838808759,"endTime":1752838808763,"status":"passed","message":"","name":"/Users/carl/Development/agents/agent-stream-fmt/src/types.test.ts"},{"assertionResults":[{"ancestorTitles":["","Enhanced CLI"],"fullName":" Enhanced CLI should parse all command line options correctly","status":"passed","title":"should parse all command line options correctly","duration":4,"failureMessages":[]},{"ancestorTitles":["","Enhanced CLI"],"fullName":" Enhanced CLI should handle --html shorthand correctly","status":"passed","title":"should handle --html shorthand correctly","duration":0,"failureMessages":[]},{"ancestorTitles":["","Enhanced CLI"],"fullName":" Enhanced CLI should handle --json shorthand correctly","status":"passed","title":"should handle --json shorthand correctly","duration":1,"failureMessages":[]},{"ancestorTitles":["","Enhanced CLI"],"fullName":" Enhanced CLI should validate vendor type","status":"passed","title":"should validate vendor type","duration":1,"failureMessages":[]},{"ancestorTitles":["","Enhanced CLI"],"fullName":" Enhanced CLI should validate format type","status":"passed","title":"should validate format type","duration":0,"failureMessages":[]},{"ancestorTitles":["","Enhanced CLI"],"fullName":" Enhanced CLI should validate event types in --only option","status":"passed","title":"should validate event types in --only option","duration":1,"failureMessages":[]},{"ancestorTitles":["","Enhanced CLI"],"fullName":" Enhanced CLI should handle file output correctly","status":"passed","title":"should handle file output correctly","duration":0,"failureMessages":[]},{"ancestorTitles":["","Enhanced CLI"],"fullName":" Enhanced CLI should handle input file correctly","status":"passed","title":"should handle input file correctly","duration":2,"failureMessages":[]},{"ancestorTitles":["","Enhanced CLI"],"fullName":" Enhanced CLI should parse comma-separated event types correctly","status":"passed","title":"should parse comma-separated event types correctly","duration":0,"failureMessages":[]},{"ancestorTitles":["","Enhanced CLI"],"fullName":" Enhanced CLI should handle errors gracefully in HTML mode","status":"passed","title":"should handle errors gracefully in HTML mode","duration":1,"failureMessages":[]},{"ancestorTitles":["","Enhanced CLI"],"fullName":" Enhanced CLI should include comprehensive help text","status":"passed","title":"should include comprehensive help text","duration":1,"failureMessages":[]},{"ancestorTitles":["","Enhanced CLI"],"fullName":" Enhanced CLI should set emitDebugEvents based on hideDebug option","status":"passed","title":"should set emitDebugEvents based on hideDebug option","duration":1,"failureMessages":[]}],"startTime":1752838808599,"endTime":1752838808611,"status":"passed","message":"","name":"/Users/carl/Development/agents/agent-stream-fmt/tests/cli-enhanced.test.ts"},{"assertionResults":[{"ancestorTitles":["","CLI Integration Tests","Basic Functionality"],"fullName":" CLI Integration Tests Basic Functionality should show help with --help flag","status":"passed","title":"should show help with --help flag","duration":70,"failureMessages":[]},{"ancestorTitles":["","CLI Integration Tests","Basic Functionality"],"fullName":" CLI Integration Tests Basic Functionality should show help with -h flag","status":"passed","title":"should show help with -h flag","duration":89,"failureMessages":[]},{"ancestorTitles":["","CLI Integration Tests","Basic Functionality"],"fullName":" CLI Integration Tests Basic Functionality should show version with --version flag","status":"passed","title":"should show version with --version flag","duration":105,"failureMessages":[]},{"ancestorTitles":["","CLI Integration Tests","Basic Functionality"],"fullName":" CLI Integration Tests Basic Functionality should default to ANSI format and auto vendor","status":"passed","title":"should default to ANSI format and auto vendor","duration":75,"failureMessages":[]},{"ancestorTitles":["","CLI Integration Tests","Vendor Detection"],"fullName":" CLI Integration Tests Vendor Detection should auto-detect Claude format","status":"passed","title":"should auto-detect Claude format","duration":53,"failureMessages":[]},{"ancestorTitles":["","CLI Integration Tests","Vendor Detection"],"fullName":" CLI Integration Tests Vendor Detection should handle explicit Claude vendor","status":"passed","title":"should handle explicit Claude vendor","duration":63,"failureMessages":[]},{"ancestorTitles":["","CLI Integration Tests","Vendor Detection"],"fullName":" CLI Integration Tests Vendor Detection should handle Gemini format","status":"passed","title":"should handle Gemini format","duration":44,"failureMessages":[]},{"ancestorTitles":["","CLI Integration Tests","Vendor Detection"],"fullName":" CLI Integration Tests Vendor Detection should handle Amp format","status":"passed","title":"should handle Amp format","duration":43,"failureMessages":[]},{"ancestorTitles":["","CLI Integration Tests","Format Options"],"fullName":" CLI Integration Tests Format Options should output ANSI format by default","status":"passed","title":"should output ANSI format by default","duration":43,"failureMessages":[]},{"ancestorTitles":["","CLI Integration Tests","Format Options"],"fullName":" CLI Integration Tests Format Options should output HTML with --html flag","status":"passed","title":"should output HTML with --html flag","duration":44,"failureMessages":[]},{"ancestorTitles":["","CLI Integration Tests","Format Options"],"fullName":" CLI Integration Tests Format Options should output HTML with --format html","status":"passed","title":"should output HTML with --format html","duration":50,"failureMessages":[]},{"ancestorTitles":["","CLI Integration Tests","Format Options"],"fullName":" CLI Integration Tests Format Options should output JSON with --json flag","status":"passed","title":"should output JSON with --json flag","duration":39,"failureMessages":[]},{"ancestorTitles":["","CLI Integration Tests","Format Options"],"fullName":" CLI Integration Tests Format Options should output JSON with --format json","status":"passed","title":"should output JSON with --format json","duration":46,"failureMessages":[]},{"ancestorTitles":["","CLI Integration Tests","Filtering Options"],"fullName":" CLI Integration Tests Filtering Options should filter events with --only flag","status":"passed","title":"should filter events with --only flag","duration":42,"failureMessages":[]},{"ancestorTitles":["","CLI Integration Tests","Filtering Options"],"fullName":" CLI Integration Tests Filtering Options should support multiple event types in --only","status":"passed","title":"should support multiple event types in --only","duration":44,"failureMessages":[]},{"ancestorTitles":["","CLI Integration Tests","Filtering Options"],"fullName":" CLI Integration Tests Filtering Options should hide tools with --hide-tools","status":"passed","title":"should hide tools with --hide-tools","duration":44,"failureMessages":[]},{"ancestorTitles":["","CLI Integration Tests","Filtering Options"],"fullName":" CLI Integration Tests Filtering Options should collapse tools with --collapse-tools","status":"failed","title":"should collapse tools with --collapse-tools","duration":44,"failureMessages":["expected '\\u001b[1m\\u001b[36m👤 user:\\u001b[22m…' to contain '└─'"],"location":{"line":216,"column":22}},{"ancestorTitles":["","CLI Integration Tests","Filtering Options"],"fullName":" CLI Integration Tests Filtering Options should hide cost with --hide-cost","status":"passed","title":"should hide cost with --hide-cost","duration":44,"failureMessages":[]},{"ancestorTitles":["","CLI Integration Tests","Filtering Options"],"fullName":" CLI Integration Tests Filtering Options should hide debug with --hide-debug","status":"passed","title":"should hide debug with --hide-debug","duration":41,"failureMessages":[]},{"ancestorTitles":["","CLI Integration Tests","File Input"],"fullName":" CLI Integration Tests File Input should read from file when provided as argument","status":"passed","title":"should read from file when provided as argument","duration":50,"failureMessages":[]},{"ancestorTitles":["","CLI Integration Tests","File Input"],"fullName":" CLI Integration Tests File Input should handle non-existent file gracefully","status":"passed","title":"should handle non-existent file gracefully","duration":38,"failureMessages":[]},{"ancestorTitles":["","CLI Integration Tests","Output Options"],"fullName":" CLI Integration Tests Output Options should write to file with --output flag","status":"passed","title":"should write to file with --output flag","duration":52,"failureMessages":[]},{"ancestorTitles":["","CLI Integration Tests","Output Options"],"fullName":" CLI Integration Tests Output Options should write to file with -o flag","status":"passed","title":"should write to file with -o flag","duration":46,"failureMessages":[]},{"ancestorTitles":["","CLI Integration Tests","Error Handling"],"fullName":" CLI Integration Tests Error Handling should handle malformed JSON gracefully","status":"passed","title":"should handle malformed JSON gracefully","duration":39,"failureMessages":[]},{"ancestorTitles":["","CLI Integration Tests","Error Handling"],"fullName":" CLI Integration Tests Error Handling should handle empty input","status":"passed","title":"should handle empty input","duration":54,"failureMessages":[]},{"ancestorTitles":["","CLI Integration Tests","Error Handling"],"fullName":" CLI Integration Tests Error Handling should handle interrupt signals gracefully","status":"passed","title":"should handle interrupt signals gracefully","duration":0,"failureMessages":[]},{"ancestorTitles":["","CLI Integration Tests","Complex Sessions"],"fullName":" CLI Integration Tests Complex Sessions should handle complex Claude session with tools","status":"passed","title":"should handle complex Claude session with tools","duration":39,"failureMessages":[]},{"ancestorTitles":["","CLI Integration Tests","Complex Sessions"],"fullName":" CLI Integration Tests Complex Sessions should handle error scenarios","status":"passed","title":"should handle error scenarios","duration":52,"failureMessages":[]},{"ancestorTitles":["","CLI Integration Tests","HTML Output"],"fullName":" CLI Integration Tests HTML Output should generate complete HTML document","status":"failed","title":"should generate complete HTML document","duration":40,"failureMessages":["expected '<!DOCTYPE html>\\n<html lang=\"en\">\\n<h…' to contain '<div class=\"agent-stream-container\">'"],"location":{"line":342,"column":22}},{"ancestorTitles":["","CLI Integration Tests","HTML Output"],"fullName":" CLI Integration Tests HTML Output should include CSS styles in HTML output","status":"passed","title":"should include CSS styles in HTML output","duration":48,"failureMessages":[]},{"ancestorTitles":["","CLI Integration Tests","HTML Output"],"fullName":" CLI Integration Tests HTML Output should escape user content in HTML","status":"passed","title":"should escape user content in HTML","duration":38,"failureMessages":[]},{"ancestorTitles":["","CLI Integration Tests","Performance"],"fullName":" CLI Integration Tests Performance should handle large files efficiently","status":"failed","title":"should handle large files efficiently","duration":41,"failureMessages":["expected 1 to be +0 // Object.is equality"],"location":{"line":380,"column":24}},{"ancestorTitles":["","CLI Integration Tests","Pipe Support"],"fullName":" CLI Integration Tests Pipe Support should work as part of a pipeline","status":"passed","title":"should work as part of a pipeline","duration":47,"failureMessages":[]},{"ancestorTitles":["","CLI Integration Tests","Color Output"],"fullName":" CLI Integration Tests Color Output should detect TTY and output colors","status":"passed","title":"should detect TTY and output colors","duration":41,"failureMessages":[]},{"ancestorTitles":["","CLI Integration Tests","Color Output"],"fullName":" CLI Integration Tests Color Output should respect NO_COLOR environment variable","status":"failed","title":"should respect NO_COLOR environment variable","duration":48,"failureMessages":["expected '' to be truthy"],"location":{"line":415,"column":22}}],"startTime":1752838808529,"endTime":1752838810225,"status":"failed","message":"","name":"/Users/carl/Development/agents/agent-stream-fmt/tests/cli.test.ts"},{"assertionResults":[{"ancestorTitles":["","Comprehensive Parser Integration Tests","Parser Detection Accuracy"],"fullName":" Comprehensive Parser Integration Tests Parser Detection Accuracy correctly detects vendor for all fixture files","status":"passed","title":"correctly detects vendor for all fixture files","duration":4,"failureMessages":[]},{"ancestorTitles":["","Comprehensive Parser Integration Tests","Parser Detection Accuracy"],"fullName":" Comprehensive Parser Integration Tests Parser Detection Accuracy does not false-positive detect wrong vendors","status":"passed","title":"does not false-positive detect wrong vendors","duration":1,"failureMessages":[]},{"ancestorTitles":["","Comprehensive Parser Integration Tests","Parser Event Generation"],"fullName":" Comprehensive Parser Integration Tests Parser Event Generation generates valid events for all vendor fixtures","status":"passed","title":"generates valid events for all vendor fixtures","duration":12,"failureMessages":[]},{"ancestorTitles":["","Comprehensive Parser Integration Tests","Parser Event Generation"],"fullName":" Comprehensive Parser Integration Tests Parser Event Generation handles malformed JSON gracefully","status":"passed","title":"handles malformed JSON gracefully","duration":0,"failureMessages":[]},{"ancestorTitles":["","Comprehensive Parser Integration Tests","Event Pattern Validation"],"fullName":" Comprehensive Parser Integration Tests Event Pattern Validation generates expected event patterns for message exchanges","status":"passed","title":"generates expected event patterns for message exchanges","duration":0,"failureMessages":[]},{"ancestorTitles":["","Comprehensive Parser Integration Tests","Event Pattern Validation"],"fullName":" Comprehensive Parser Integration Tests Event Pattern Validation generates expected event patterns for tool usage","status":"passed","title":"generates expected event patterns for tool usage","duration":1,"failureMessages":[]},{"ancestorTitles":["","Comprehensive Parser Integration Tests","Event Pattern Validation"],"fullName":" Comprehensive Parser Integration Tests Event Pattern Validation generates cost events for usage tracking","status":"passed","title":"generates cost events for usage tracking","duration":0,"failureMessages":[]},{"ancestorTitles":["","Comprehensive Parser Integration Tests","Content Preservation"],"fullName":" Comprehensive Parser Integration Tests Content Preservation preserves exact message content including whitespace","status":"passed","title":"preserves exact message content including whitespace","duration":1,"failureMessages":[]},{"ancestorTitles":["","Comprehensive Parser Integration Tests","Content Preservation"],"fullName":" Comprehensive Parser Integration Tests Content Preservation preserves tool names and IDs correctly","status":"passed","title":"preserves tool names and IDs correctly","duration":0,"failureMessages":[]},{"ancestorTitles":["","Comprehensive Parser Integration Tests","Performance Characteristics"],"fullName":" Comprehensive Parser Integration Tests Performance Characteristics parses fixture files efficiently","status":"passed","title":"parses fixture files efficiently","duration":0,"failureMessages":[]},{"ancestorTitles":["","Comprehensive Parser Integration Tests","Error Resilience"],"fullName":" Comprehensive Parser Integration Tests Error Resilience handles empty lines gracefully for all vendors","status":"passed","title":"handles empty lines gracefully for all vendors","duration":0,"failureMessages":[]},{"ancestorTitles":["","Comprehensive Parser Integration Tests","Error Resilience"],"fullName":" Comprehensive Parser Integration Tests Error Resilience handles invalid JSON gracefully for all vendors","status":"passed","title":"handles invalid JSON gracefully for all vendors","duration":1,"failureMessages":[]},{"ancestorTitles":["","Comprehensive Parser Integration Tests","Error Resilience"],"fullName":" Comprehensive Parser Integration Tests Error Resilience handles unknown event types gracefully for all vendors","status":"passed","title":"handles unknown event types gracefully for all vendors","duration":0,"failureMessages":[]},{"ancestorTitles":["","Comprehensive Parser Integration Tests","Test Results Summary"],"fullName":" Comprehensive Parser Integration Tests Test Results Summary generates comprehensive test results","status":"passed","title":"generates comprehensive test results","duration":1,"failureMessages":[]}],"startTime":1752838808262,"endTime":1752838808283,"status":"passed","message":"","name":"/Users/carl/Development/agents/agent-stream-fmt/tests/comprehensive-integration.test.ts"},{"assertionResults":[{"ancestorTitles":["","Comprehensive Error Handling Tests","JSON Parsing Errors"],"fullName":" Comprehensive Error Handling Tests JSON Parsing Errors handles malformed JSON gracefully in detection","status":"passed","title":"handles malformed JSON gracefully in detection","duration":2,"failureMessages":[]},{"ancestorTitles":["","Comprehensive Error Handling Tests","JSON Parsing Errors"],"fullName":" Comprehensive Error Handling Tests JSON Parsing Errors throws ParseError for malformed JSON in parsing","status":"passed","title":"throws ParseError for malformed JSON in parsing","duration":0,"failureMessages":[]},{"ancestorTitles":["","Comprehensive Error Handling Tests","JSON Parsing Errors"],"fullName":" Comprehensive Error Handling Tests JSON Parsing Errors provides meaningful error messages for malformed JSON","status":"passed","title":"provides meaningful error messages for malformed JSON","duration":1,"failureMessages":[]},{"ancestorTitles":["","Comprehensive Error Handling Tests","Edge Case Inputs"],"fullName":" Comprehensive Error Handling Tests Edge Case Inputs handles empty and whitespace-only inputs","status":"passed","title":"handles empty and whitespace-only inputs","duration":0,"failureMessages":[]},{"ancestorTitles":["","Comprehensive Error Handling Tests","Edge Case Inputs"],"fullName":" Comprehensive Error Handling Tests Edge Case Inputs handles very long inputs","status":"passed","title":"handles very long inputs","duration":1,"failureMessages":[]},{"ancestorTitles":["","Comprehensive Error Handling Tests","Edge Case Inputs"],"fullName":" Comprehensive Error Handling Tests Edge Case Inputs handles unicode and special characters","status":"passed","title":"handles unicode and special characters","duration":1,"failureMessages":[]},{"ancestorTitles":["","Comprehensive Error Handling Tests","Edge Case Inputs"],"fullName":" Comprehensive Error Handling Tests Edge Case Inputs handles special whitespace and line endings","status":"passed","title":"handles special whitespace and line endings","duration":0,"failureMessages":[]},{"ancestorTitles":["","Comprehensive Error Handling Tests","Unknown Event Types"],"fullName":" Comprehensive Error Handling Tests Unknown Event Types handles unknown event types gracefully","status":"passed","title":"handles unknown event types gracefully","duration":1,"failureMessages":[]},{"ancestorTitles":["","Comprehensive Error Handling Tests","Unknown Event Types"],"fullName":" Comprehensive Error Handling Tests Unknown Event Types handles events with missing required fields","status":"passed","title":"handles events with missing required fields","duration":0,"failureMessages":[]},{"ancestorTitles":["","Comprehensive Error Handling Tests","Parser Registration Errors"],"fullName":" Comprehensive Error Handling Tests Parser Registration Errors handles invalid parser registrations","status":"passed","title":"handles invalid parser registrations","duration":1,"failureMessages":[]},{"ancestorTitles":["","Comprehensive Error Handling Tests","Parser Registration Errors"],"fullName":" Comprehensive Error Handling Tests Parser Registration Errors handles invalid priority values","status":"passed","title":"handles invalid priority values","duration":0,"failureMessages":[]},{"ancestorTitles":["","Comprehensive Error Handling Tests","Detection Failures"],"fullName":" Comprehensive Error Handling Tests Detection Failures handles detection failures gracefully","status":"passed","title":"handles detection failures gracefully","duration":1,"failureMessages":[]},{"ancestorTitles":["","Comprehensive Error Handling Tests","Detection Failures"],"fullName":" Comprehensive Error Handling Tests Detection Failures handles selectParser errors correctly","status":"passed","title":"handles selectParser errors correctly","duration":0,"failureMessages":[]},{"ancestorTitles":["","Comprehensive Error Handling Tests","Malformed JSON Validation"],"fullName":" Comprehensive Error Handling Tests Malformed JSON Validation properly validates malformed JSON in error-handling fixtures","status":"passed","title":"properly validates malformed JSON in error-handling fixtures","duration":1,"failureMessages":[]},{"ancestorTitles":["","Comprehensive Error Handling Tests","Malformed JSON Validation"],"fullName":" Comprehensive Error Handling Tests Malformed JSON Validation handles specific malformed JSON patterns","status":"passed","title":"handles specific malformed JSON patterns","duration":2,"failureMessages":[]},{"ancestorTitles":["","Comprehensive Error Handling Tests","Real Error Handling Fixture Tests"],"fullName":" Comprehensive Error Handling Tests Real Error Handling Fixture Tests processes error-handling fixtures correctly","status":"passed","title":"processes error-handling fixtures correctly","duration":0,"failureMessages":[]},{"ancestorTitles":["","Comprehensive Error Handling Tests","Memory and Performance Under Error Conditions"],"fullName":" Comprehensive Error Handling Tests Memory and Performance Under Error Conditions handles repeated parsing failures efficiently","status":"passed","title":"handles repeated parsing failures efficiently","duration":113,"failureMessages":[]},{"ancestorTitles":["","Comprehensive Error Handling Tests","Memory and Performance Under Error Conditions"],"fullName":" Comprehensive Error Handling Tests Memory and Performance Under Error Conditions handles detection failures efficiently","status":"passed","title":"handles detection failures efficiently","duration":161,"failureMessages":[]}],"startTime":1752838808246,"endTime":1752838808531,"status":"passed","message":"","name":"/Users/carl/Development/agents/agent-stream-fmt/tests/error-handling.test.ts"},{"assertionResults":[{"ancestorTitles":["","Fixture Validation Tests","JSON Structure Validation"],"fullName":" Fixture Validation Tests JSON Structure Validation all fixture files contain valid JSON lines","status":"passed","title":"all fixture files contain valid JSON lines","duration":3,"failureMessages":[]},{"ancestorTitles":["","Fixture Validation Tests","JSON Structure Validation"],"fullName":" Fixture Validation Tests JSON Structure Validation valid JSON lines contain required fields","status":"passed","title":"valid JSON lines contain required fields","duration":2,"failureMessages":[]},{"ancestorTitles":["","Fixture Validation Tests","Vendor Detection Validation"],"fullName":" Fixture Validation Tests Vendor Detection Validation detects correct vendor for all valid fixture lines","status":"passed","title":"detects correct vendor for all valid fixture lines","duration":0,"failureMessages":[]},{"ancestorTitles":["","Fixture Validation Tests","Parser Processing Validation"],"fullName":" Fixture Validation Tests Parser Processing Validation successfully processes all detectable fixture lines","status":"passed","title":"successfully processes all detectable fixture lines","duration":11,"failureMessages":[]},{"ancestorTitles":["","Fixture Validation Tests","Parser Processing Validation"],"fullName":" Fixture Validation Tests Parser Processing Validation processes different event types correctly","status":"passed","title":"processes different event types correctly","duration":0,"failureMessages":[]},{"ancestorTitles":["","Fixture Validation Tests","Performance Validation"],"fullName":" Fixture Validation Tests Performance Validation processes all fixtures within performance targets","status":"passed","title":"processes all fixtures within performance targets","duration":0,"failureMessages":[]},{"ancestorTitles":["","Fixture Validation Tests","Content Integrity Validation"],"fullName":" Fixture Validation Tests Content Integrity Validation preserves content exactly during parsing","status":"passed","title":"preserves content exactly during parsing","duration":1,"failureMessages":[]},{"ancestorTitles":["","Fixture Validation Tests","Coverage Validation"],"fullName":" Fixture Validation Tests Coverage Validation provides adequate test coverage across all fixtures","status":"passed","title":"provides adequate test coverage across all fixtures","duration":0,"failureMessages":[]},{"ancestorTitles":["","Fixture Validation Tests","Fixture File Summary"],"fullName":" Fixture Validation Tests Fixture File Summary provides comprehensive fixture overview","status":"passed","title":"provides comprehensive fixture overview","duration":1,"failureMessages":[]}],"startTime":1752838808261,"endTime":1752838808279,"status":"passed","message":"","name":"/Users/carl/Development/agents/agent-stream-fmt/tests/fixture-validation.test.ts"},{"assertionResults":[{"ancestorTitles":["","Fixture validation","claude"],"fullName":" Fixture validation claude has fixture directory","status":"passed","title":"has fixture directory","duration":1,"failureMessages":[]},{"ancestorTitles":["","Fixture validation","claude"],"fullName":" Fixture validation claude has at least one .jsonl file","status":"passed","title":"has at least one .jsonl file","duration":0,"failureMessages":[]},{"ancestorTitles":["","Fixture validation","claude"],"fullName":" Fixture validation claude all JSONL files are valid","status":"passed","title":"all JSONL files are valid","duration":0,"failureMessages":[]},{"ancestorTitles":["","Fixture validation","gemini"],"fullName":" Fixture validation gemini has fixture directory","status":"passed","title":"has fixture directory","duration":1,"failureMessages":[]},{"ancestorTitles":["","Fixture validation","gemini"],"fullName":" Fixture validation gemini has at least one .jsonl file","status":"passed","title":"has at least one .jsonl file","duration":0,"failureMessages":[]},{"ancestorTitles":["","Fixture validation","gemini"],"fullName":" Fixture validation gemini all JSONL files are valid","status":"passed","title":"all JSONL files are valid","duration":0,"failureMessages":[]},{"ancestorTitles":["","Fixture validation","amp"],"fullName":" Fixture validation amp has fixture directory","status":"passed","title":"has fixture directory","duration":0,"failureMessages":[]},{"ancestorTitles":["","Fixture validation","amp"],"fullName":" Fixture validation amp has at least one .jsonl file","status":"passed","title":"has at least one .jsonl file","duration":0,"failureMessages":[]},{"ancestorTitles":["","Fixture validation","amp"],"fullName":" Fixture validation amp all JSONL files are valid","status":"passed","title":"all JSONL files are valid","duration":0,"failureMessages":[]}],"startTime":1752838808950,"endTime":1752838808953,"status":"passed","message":"","name":"/Users/carl/Development/agents/agent-stream-fmt/tests/fixtures.test.ts"},{"assertionResults":[{"ancestorTitles":["","Performance Benchmark Tests","Parser Performance Benchmarks"],"fullName":" Performance Benchmark Tests Parser Performance Benchmarks parses 1000 lines within performance target for all vendors","status":"passed","title":"parses 1000 lines within performance target for all vendors","duration":4,"failureMessages":[]},{"ancestorTitles":["","Performance Benchmark Tests","Parser Performance Benchmarks"],"fullName":" Performance Benchmark Tests Parser Performance Benchmarks parses 10000 lines efficiently for all vendors","status":"passed","title":"parses 10000 lines efficiently for all vendors","duration":30,"failureMessages":[]},{"ancestorTitles":["","Performance Benchmark Tests","Parser Performance Benchmarks"],"fullName":" Performance Benchmark Tests Parser Performance Benchmarks handles mixed event types efficiently for all vendors","status":"passed","title":"handles mixed event types efficiently for all vendors","duration":1,"failureMessages":[]},{"ancestorTitles":["","Performance Benchmark Tests","Parser Performance Benchmarks"],"fullName":" Performance Benchmark Tests Parser Performance Benchmarks scales linearly with input size for all vendors","status":"passed","title":"scales linearly with input size for all vendors","duration":10,"failureMessages":[]},{"ancestorTitles":["","Performance Benchmark Tests","Detection Performance Benchmarks"],"fullName":" Performance Benchmark Tests Detection Performance Benchmarks detects vendor efficiently for large datasets","status":"passed","title":"detects vendor efficiently for large datasets","duration":7,"failureMessages":[]},{"ancestorTitles":["","Performance Benchmark Tests","Detection Performance Benchmarks"],"fullName":" Performance Benchmark Tests Detection Performance Benchmarks handles detection failures efficiently","status":"passed","title":"handles detection failures efficiently","duration":8,"failureMessages":[]},{"ancestorTitles":["","Performance Benchmark Tests","Memory Usage Benchmarks"],"fullName":" Performance Benchmark Tests Memory Usage Benchmarks maintains reasonable memory usage during parsing","status":"passed","title":"maintains reasonable memory usage during parsing","duration":4,"failureMessages":[]},{"ancestorTitles":["","Performance Benchmark Tests","Memory Usage Benchmarks"],"fullName":" Performance Benchmark Tests Memory Usage Benchmarks does not leak memory during repeated parsing","status":"passed","title":"does not leak memory during repeated parsing","duration":4,"failureMessages":[]},{"ancestorTitles":["","Performance Benchmark Tests","Real Fixture Performance"],"fullName":" Performance Benchmark Tests Real Fixture Performance processes Claude fixtures efficiently","status":"passed","title":"processes Claude fixtures efficiently","duration":1,"failureMessages":[]},{"ancestorTitles":["","Performance Benchmark Tests","Concurrent Processing"],"fullName":" Performance Benchmark Tests Concurrent Processing handles concurrent parsing efficiently","status":"passed","title":"handles concurrent parsing efficiently","duration":2,"failureMessages":[]},{"ancestorTitles":["","Performance Benchmark Tests","Performance Regression Tests"],"fullName":" Performance Benchmark Tests Performance Regression Tests maintains performance across different input patterns","status":"passed","title":"maintains performance across different input patterns","duration":7,"failureMessages":[]}],"startTime":1752838808246,"endTime":1752838808326,"status":"passed","message":"","name":"/Users/carl/Development/agents/agent-stream-fmt/tests/performance-benchmarks.test.ts"},{"assertionResults":[{"ancestorTitles":["","Registry Integration Tests","Auto-Detection System"],"fullName":" Registry Integration Tests Auto-Detection System correctly auto-detects vendor for all vendor fixtures","status":"passed","title":"correctly auto-detects vendor for all vendor fixtures","duration":13,"failureMessages":[]},{"ancestorTitles":["","Registry Integration Tests","Auto-Detection System"],"fullName":" Registry Integration Tests Auto-Detection System handles edge cases in auto-detection","status":"passed","title":"handles edge cases in auto-detection","duration":2,"failureMessages":[]},{"ancestorTitles":["","Registry Integration Tests","Auto-Detection System"],"fullName":" Registry Integration Tests Auto-Detection System maintains detection consistency across multiple calls","status":"passed","title":"maintains detection consistency across multiple calls","duration":1,"failureMessages":[]},{"ancestorTitles":["","Registry Integration Tests","Priority Ordering System"],"fullName":" Registry Integration Tests Priority Ordering System respects parser priority in detection order","status":"passed","title":"respects parser priority in detection order","duration":0,"failureMessages":[]},{"ancestorTitles":["","Registry Integration Tests","Priority Ordering System"],"fullName":" Registry Integration Tests Priority Ordering System handles parsers with same priority","status":"passed","title":"handles parsers with same priority","duration":0,"failureMessages":[]},{"ancestorTitles":["","Registry Integration Tests","Priority Ordering System"],"fullName":" Registry Integration Tests Priority Ordering System Claude parser has expected priority","status":"passed","title":"Claude parser has expected priority","duration":4,"failureMessages":[]},{"ancestorTitles":["","Registry Integration Tests","Priority Ordering System"],"fullName":" Registry Integration Tests Priority Ordering System higher priority parser overrides Claude","status":"passed","title":"higher priority parser overrides Claude","duration":0,"failureMessages":[]},{"ancestorTitles":["","Registry Integration Tests","Priority Ordering System"],"fullName":" Registry Integration Tests Priority Ordering System validates default registry priority ordering","status":"passed","title":"validates default registry priority ordering","duration":0,"failureMessages":[]},{"ancestorTitles":["","Registry Integration Tests","Priority Ordering System"],"fullName":" Registry Integration Tests Priority Ordering System handles conflicting detection with proper priority","status":"passed","title":"handles conflicting detection with proper priority","duration":0,"failureMessages":[]},{"ancestorTitles":["","Registry Integration Tests","Error Handling in Registry"],"fullName":" Registry Integration Tests Error Handling in Registry handles parser detection errors gracefully","status":"passed","title":"handles parser detection errors gracefully","duration":8,"failureMessages":[]},{"ancestorTitles":["","Registry Integration Tests","Error Handling in Registry"],"fullName":" Registry Integration Tests Error Handling in Registry handles multiple parser errors","status":"passed","title":"handles multiple parser errors","duration":0,"failureMessages":[]},{"ancestorTitles":["","Registry Integration Tests","Error Handling in Registry"],"fullName":" Registry Integration Tests Error Handling in Registry handles all parsers failing detection","status":"passed","title":"handles all parsers failing detection","duration":0,"failureMessages":[]},{"ancestorTitles":["","Registry Integration Tests","Registry State Management"],"fullName":" Registry Integration Tests Registry State Management maintains consistent state during concurrent operations","status":"passed","title":"maintains consistent state during concurrent operations","duration":0,"failureMessages":[]},{"ancestorTitles":["","Registry Integration Tests","Registry State Management"],"fullName":" Registry Integration Tests Registry State Management handles parser replacement correctly","status":"passed","title":"handles parser replacement correctly","duration":4,"failureMessages":[]},{"ancestorTitles":["","Registry Integration Tests","Cross-Vendor Detection"],"fullName":" Registry Integration Tests Cross-Vendor Detection does not detect Claude format as other vendors","status":"passed","title":"does not detect Claude format as other vendors","duration":0,"failureMessages":[]},{"ancestorTitles":["","Registry Integration Tests","Cross-Vendor Detection"],"fullName":" Registry Integration Tests Cross-Vendor Detection handles ambiguous formats correctly","status":"passed","title":"handles ambiguous formats correctly","duration":1,"failureMessages":[]},{"ancestorTitles":["","Registry Integration Tests","Performance Under Load"],"fullName":" Registry Integration Tests Performance Under Load maintains performance with many parsers","status":"passed","title":"maintains performance with many parsers","duration":24,"failureMessages":[]},{"ancestorTitles":["","Registry Integration Tests","Performance Under Load"],"fullName":" Registry Integration Tests Performance Under Load handles rapid parser registration/unregistration","status":"passed","title":"handles rapid parser registration/unregistration","duration":1,"failureMessages":[]}],"startTime":1752838808248,"endTime":1752838808308,"status":"passed","message":"","name":"/Users/carl/Development/agents/agent-stream-fmt/tests/registry-integration.test.ts"},{"assertionResults":[{"ancestorTitles":["","HtmlRenderer","HTML escaping"],"fullName":" HtmlRenderer HTML escaping should escape HTML entities in message content","status":"passed","title":"should escape HTML entities in message content","duration":1,"failureMessages":[]},{"ancestorTitles":["","HtmlRenderer","HTML escaping"],"fullName":" HtmlRenderer HTML escaping should escape HTML in tool names and input","status":"passed","title":"should escape HTML in tool names and input","duration":0,"failureMessages":[]},{"ancestorTitles":["","HtmlRenderer","Message rendering"],"fullName":" HtmlRenderer Message rendering should render user messages with correct structure","status":"passed","title":"should render user messages with correct structure","duration":1,"failureMessages":[]},{"ancestorTitles":["","HtmlRenderer","Message rendering"],"fullName":" HtmlRenderer Message rendering should render assistant messages with correct icon","status":"passed","title":"should render assistant messages with correct icon","duration":0,"failureMessages":[]},{"ancestorTitles":["","HtmlRenderer","Message rendering"],"fullName":" HtmlRenderer Message rendering should render system messages with correct icon","status":"passed","title":"should render system messages with correct icon","duration":0,"failureMessages":[]},{"ancestorTitles":["","HtmlRenderer","Message rendering"],"fullName":" HtmlRenderer Message rendering should handle newlines and basic markdown formatting","status":"passed","title":"should handle newlines and basic markdown formatting","duration":0,"failureMessages":[]},{"ancestorTitles":["","HtmlRenderer","Tool rendering"],"fullName":" HtmlRenderer Tool rendering should render tool start phase","status":"passed","title":"should render tool start phase","duration":0,"failureMessages":[]},{"ancestorTitles":["","HtmlRenderer","Tool rendering"],"fullName":" HtmlRenderer Tool rendering should render tool stdout","status":"passed","title":"should render tool stdout","duration":0,"failureMessages":[]},{"ancestorTitles":["","HtmlRenderer","Tool rendering"],"fullName":" HtmlRenderer Tool rendering should render tool stderr","status":"passed","title":"should render tool stderr","duration":0,"failureMessages":[]},{"ancestorTitles":["","HtmlRenderer","Tool rendering"],"fullName":" HtmlRenderer Tool rendering should render tool end with success","status":"passed","title":"should render tool end with success","duration":1,"failureMessages":[]},{"ancestorTitles":["","HtmlRenderer","Tool rendering"],"fullName":" HtmlRenderer Tool rendering should render tool end with error","status":"passed","title":"should render tool end with error","duration":0,"failureMessages":[]},{"ancestorTitles":["","HtmlRenderer","Tool rendering"],"fullName":" HtmlRenderer Tool rendering should hide tools when hideTools option is set","status":"passed","title":"should hide tools when hideTools option is set","duration":0,"failureMessages":[]},{"ancestorTitles":["","HtmlRenderer","Cost rendering"],"fullName":" HtmlRenderer Cost rendering should render cost information","status":"passed","title":"should render cost information","duration":0,"failureMessages":[]},{"ancestorTitles":["","HtmlRenderer","Cost rendering"],"fullName":" HtmlRenderer Cost rendering should hide cost when hideCost option is set","status":"passed","title":"should hide cost when hideCost option is set","duration":0,"failureMessages":[]},{"ancestorTitles":["","HtmlRenderer","Error rendering"],"fullName":" HtmlRenderer Error rendering should render error messages","status":"passed","title":"should render error messages","duration":0,"failureMessages":[]},{"ancestorTitles":["","HtmlRenderer","Error rendering"],"fullName":" HtmlRenderer Error rendering should escape HTML in error messages","status":"passed","title":"should escape HTML in error messages","duration":0,"failureMessages":[]},{"ancestorTitles":["","HtmlRenderer","Debug rendering"],"fullName":" HtmlRenderer Debug rendering should render debug information","status":"passed","title":"should render debug information","duration":1,"failureMessages":[]},{"ancestorTitles":["","HtmlRenderer","Debug rendering"],"fullName":" HtmlRenderer Debug rendering should hide debug when hideDebug option is set","status":"passed","title":"should hide debug when hideDebug option is set","duration":0,"failureMessages":[]},{"ancestorTitles":["","HtmlRenderer","Batch rendering"],"fullName":" HtmlRenderer Batch rendering should render multiple events","status":"passed","title":"should render multiple events","duration":0,"failureMessages":[]},{"ancestorTitles":["","HtmlRenderer","Flush functionality"],"fullName":" HtmlRenderer Flush functionality should close open tool executions","status":"passed","title":"should close open tool executions","duration":0,"failureMessages":[]},{"ancestorTitles":["","HtmlRenderer","Flush functionality"],"fullName":" HtmlRenderer Flush functionality should return empty string when no open tools","status":"passed","title":"should return empty string when no open tools","duration":0,"failureMessages":[]},{"ancestorTitles":["","HtmlRenderer","Flush functionality"],"fullName":" HtmlRenderer Flush functionality should handle multiple open tools","status":"passed","title":"should handle multiple open tools","duration":0,"failureMessages":[]},{"ancestorTitles":["","HtmlRenderer","Unknown event handling"],"fullName":" HtmlRenderer Unknown event handling should render unknown events gracefully","status":"passed","title":"should render unknown events gracefully","duration":0,"failureMessages":[]},{"ancestorTitles":["","HtmlRenderer","Context tracking"],"fullName":" HtmlRenderer Context tracking should track message count","status":"passed","title":"should track message count","duration":0,"failureMessages":[]},{"ancestorTitles":["","HtmlRenderer","Context tracking"],"fullName":" HtmlRenderer Context tracking should properly track tool lifecycle","status":"passed","title":"should properly track tool lifecycle","duration":1,"failureMessages":[]}],"startTime":1752838808569,"endTime":1752838808574,"status":"passed","message":"","name":"/Users/carl/Development/agents/agent-stream-fmt/src/render/html.test.ts"},{"assertionResults":[{"ancestorTitles":["","Render Types"],"fullName":" Render Types should allow valid RenderOptions","status":"passed","title":"should allow valid RenderOptions","duration":0,"failureMessages":[]},{"ancestorTitles":["","Render Types"],"fullName":" Render Types should enforce format enum values","status":"passed","title":"should enforce format enum values","duration":0,"failureMessages":[]},{"ancestorTitles":["","Render Types"],"fullName":" Render Types should type check Renderer implementation","status":"passed","title":"should type check Renderer implementation","duration":1,"failureMessages":[]},{"ancestorTitles":["","Render Types"],"fullName":" Render Types should type check RenderContext","status":"passed","title":"should type check RenderContext","duration":0,"failureMessages":[]},{"ancestorTitles":["","Render Types"],"fullName":" Render Types should type check RendererFactory","status":"passed","title":"should type check RendererFactory","duration":0,"failureMessages":[]},{"ancestorTitles":["","Render Types"],"fullName":" Render Types should type check RendererRegistry","status":"passed","title":"should type check RendererRegistry","duration":0,"failureMessages":[]},{"ancestorTitles":["","Render Types"],"fullName":" Render Types should handle optional fields correctly","status":"passed","title":"should handle optional fields correctly","duration":1,"failureMessages":[]}],"startTime":1752838808791,"endTime":1752838808793,"status":"passed","message":"","name":"/Users/carl/Development/agents/agent-stream-fmt/src/render/types.test.ts"},{"assertionResults":[{"ancestorTitles":["","CLI","Help display"],"fullName":" CLI Help display shows help with --help flag","status":"failed","title":"shows help with --help flag","duration":114,"failureMessages":["expected 'Usage: agent-stream-fmt [options] [fi…' to contain 'agent-stream-fmt (Phase 2 - Basic CLI)'"],"location":{"line":107,"column":29}},{"ancestorTitles":["","CLI","Help display"],"fullName":" CLI Help display shows help with -h flag","status":"failed","title":"shows help with -h flag","duration":78,"failureMessages":["expected 'Usage: agent-stream-fmt [options] [fi…' to contain 'agent-stream-fmt (Phase 2 - Basic CLI)'"],"location":{"line":120,"column":29}},{"ancestorTitles":["","CLI","File processing"],"fullName":" CLI File processing processes Claude fixture file","status":"failed","title":"processes Claude fixture file","duration":79,"failureMessages":["Failed to parse JSON line: \u001b[1m\u001b[36m👤 user:\u001b[22m\u001b[39m\nError: SyntaxError: Unexpected token '\u001b', \"\u001b[1m\u001b[36m\ud83d\"... is not valid JSON"],"location":{"line":87,"column":15}},{"ancestorTitles":["","CLI","File processing"],"fullName":" CLI File processing processes Gemini fixture file with vendor specification","status":"failed","title":"processes Gemini fixture file with vendor specification","duration":73,"failureMessages":["Failed to parse JSON line: \u001b[1m\u001b[36m👤 user:\u001b[22m\u001b[39m\nError: SyntaxError: Unexpected token '\u001b', \"\u001b[1m\u001b[36m\ud83d\"... is not valid JSON"],"location":{"line":87,"column":15}},{"ancestorTitles":["","CLI","File processing"],"fullName":" CLI File processing processes Amp fixture file","status":"failed","title":"processes Amp fixture file","duration":64,"failureMessages":["Failed to parse JSON line: \u001b[2m\u001b[3m🔧\u001b[22m\u001b[23m \u001b[1m\u001b[34mcompile\u001b[22m\u001b[39m\nError: SyntaxError: Unexpected token '\u001b', \"\u001b[2m\u001b[3m🔧\"... is not valid JSON"],"location":{"line":87,"column":15}},{"ancestorTitles":["","CLI","File processing"],"fullName":" CLI File processing auto-detects vendor format","status":"failed","title":"auto-detects vendor format","duration":117,"failureMessages":["Failed to parse JSON line: \u001b[1m\u001b[36m👤 user:\u001b[22m\u001b[39m\nError: SyntaxError: Unexpected token '\u001b', \"\u001b[1m\u001b[36m\ud83d\"... is not valid JSON"],"location":{"line":87,"column":15}},{"ancestorTitles":["","CLI","Stdin processing"],"fullName":" CLI Stdin processing processes input from stdin","status":"failed","title":"processes input from stdin","duration":60,"failureMessages":["Failed to parse JSON line: \u001b[1m\u001b[36m👤 user:\u001b[22m\u001b[39m\nError: SyntaxError: Unexpected token '\u001b', \"\u001b[1m\u001b[36m\ud83d\"... is not valid JSON"],"location":{"line":87,"column":15}},{"ancestorTitles":["","CLI","Stdin processing"],"fullName":" CLI Stdin processing processes stdin with vendor specification","status":"failed","title":"processes stdin with vendor specification","duration":56,"failureMessages":["Failed to parse JSON line: \u001b[1m\u001b[32m🤖 assistant:\u001b[22m\u001b[39m\nError: SyntaxError: Unexpected token '\u001b', \"\u001b[1m\u001b[32m\ud83e\"... is not valid JSON"],"location":{"line":87,"column":15}},{"ancestorTitles":["","CLI","Stdin processing"],"fullName":" CLI Stdin processing handles empty stdin","status":"skipped","title":"handles empty stdin","failureMessages":[]},{"ancestorTitles":["","CLI","Debug mode"],"fullName":" CLI Debug mode shows debug events with --debug flag","status":"failed","title":"shows debug events with --debug flag","duration":59,"failureMessages":["expected 1 to be +0 // Object.is equality"],"location":{"line":228,"column":31}},{"ancestorTitles":["","CLI","Debug mode"],"fullName":" CLI Debug mode shows debug events with -d flag","status":"failed","title":"shows debug events with -d flag","duration":51,"failureMessages":["expected 1 to be +0 // Object.is equality"],"location":{"line":250,"column":31}},{"ancestorTitles":["","CLI","Debug mode"],"fullName":" CLI Debug mode shows vendor detection in debug mode with auto","status":"failed","title":"shows vendor detection in debug mode with auto","duration":64,"failureMessages":["expected 1 to be +0 // Object.is equality"],"location":{"line":261,"column":31}},{"ancestorTitles":["","CLI","Error handling"],"fullName":" CLI Error handling handles non-existent file","status":"passed","title":"handles non-existent file","duration":42,"failureMessages":[]},{"ancestorTitles":["","CLI","Error handling"],"fullName":" CLI Error handling handles invalid JSON gracefully","status":"failed","title":"handles invalid JSON gracefully","duration":45,"failureMessages":["Failed to parse JSON line: \u001b[1m\u001b[32m🤖 assistant:\u001b[22m\u001b[39m\nError: SyntaxError: Unexpected token '\u001b', \"\u001b[1m\u001b[32m\ud83e\"... is not valid JSON"],"location":{"line":87,"column":15}},{"ancestorTitles":["","CLI","Error handling"],"fullName":" CLI Error handling handles malformed JSON with debug info","status":"failed","title":"handles malformed JSON with debug info","duration":42,"failureMessages":["expected 1 to be +0 // Object.is equality"],"location":{"line":305,"column":31}},{"ancestorTitles":["","CLI","Error handling"],"fullName":" CLI Error handling handles unknown event types","status":"failed","title":"handles unknown event types","duration":49,"failureMessages":["expected undefined not to be undefined"],"location":{"line":331,"column":26}},{"ancestorTitles":["","CLI","Vendor handling"],"fullName":" CLI Vendor handling accepts vendor: claude","status":"passed","title":"accepts vendor: claude","duration":41,"failureMessages":[]},{"ancestorTitles":["","CLI","Vendor handling"],"fullName":" CLI Vendor handling accepts vendor: gemini","status":"passed","title":"accepts vendor: gemini","duration":46,"failureMessages":[]},{"ancestorTitles":["","CLI","Vendor handling"],"fullName":" CLI Vendor handling accepts vendor: amp","status":"passed","title":"accepts vendor: amp","duration":42,"failureMessages":[]},{"ancestorTitles":["","CLI","Vendor handling"],"fullName":" CLI Vendor handling accepts vendor: auto","status":"passed","title":"accepts vendor: auto","duration":47,"failureMessages":[]},{"ancestorTitles":["","CLI","Vendor handling"],"fullName":" CLI Vendor handling handles invalid vendor gracefully","status":"failed","title":"handles invalid vendor gracefully","duration":42,"failureMessages":["expected 1 to be +0 // Object.is equality"],"location":{"line":359,"column":31}},{"ancestorTitles":["","CLI","Output format validation"],"fullName":" CLI Output format validation outputs valid JSON for each event","status":"failed","title":"outputs valid JSON for each event","duration":44,"failureMessages":["expected [Function] to not throw an error but 'SyntaxError: Unexpected token \\'\\u001…' was thrown"],"location":{"line":379,"column":44}},{"ancestorTitles":["","CLI","Output format validation"],"fullName":" CLI Output format validation outputs AgentEvent format","status":"failed","title":"outputs AgentEvent format","duration":46,"failureMessages":["Failed to parse JSON line: \u001b[1m\u001b[36m👤 user:\u001b[22m\u001b[39m\nError: SyntaxError: Unexpected token '\u001b', \"\u001b[1m\u001b[36m\ud83d\"... is not valid JSON"],"location":{"line":87,"column":15}},{"ancestorTitles":["","CLI","Exit codes"],"fullName":" CLI Exit codes exits with 0 on success","status":"passed","title":"exits with 0 on success","duration":43,"failureMessages":[]},{"ancestorTitles":["","CLI","Exit codes"],"fullName":" CLI Exit codes exits with 0 on help","status":"passed","title":"exits with 0 on help","duration":46,"failureMessages":[]},{"ancestorTitles":["","CLI","Exit codes"],"fullName":" CLI Exit codes exits with 1 on file error","status":"passed","title":"exits with 1 on file error","duration":41,"failureMessages":[]},{"ancestorTitles":["","CLI","Exit codes"],"fullName":" CLI Exit codes exits with 0 even with parse errors (continues by default)","status":"passed","title":"exits with 0 even with parse errors (continues by default)","duration":50,"failureMessages":[]},{"ancestorTitles":["","CLI","Complex scenarios"],"fullName":" CLI Complex scenarios processes mixed valid and invalid lines","status":"failed","title":"processes mixed valid and invalid lines","duration":43,"failureMessages":["expected 1 to be +0 // Object.is equality"],"location":{"line":448,"column":31}},{"ancestorTitles":["","CLI","Complex scenarios"],"fullName":" CLI Complex scenarios handles very long lines","status":"failed","title":"handles very long lines","duration":41,"failureMessages":["Failed to parse JSON line: \u001b[1m\u001b[32m🤖 assistant:\u001b[22m\u001b[39m\nError: SyntaxError: Unexpected token '\u001b', \"\u001b[1m\u001b[32m\ud83e\"... is not valid JSON"],"location":{"line":87,"column":15}},{"ancestorTitles":["","CLI","Complex scenarios"],"fullName":" CLI Complex scenarios handles unicode and special characters","status":"failed","title":"handles unicode and special characters","duration":55,"failureMessages":["Failed to parse JSON line: \u001b[1m\u001b[32m🤖 assistant:\u001b[22m\u001b[39m\nError: SyntaxError: Unexpected token '\u001b', \"\u001b[1m\u001b[32m\ud83e\"... is not valid JSON"],"location":{"line":87,"column":15}},{"ancestorTitles":["","CLI","Integration with fixtures"],"fullName":" CLI Integration with fixtures processes all Claude fixtures","status":"failed","title":"processes all Claude fixtures","duration":39,"failureMessages":["Failed to parse JSON line: \u001b[1m\u001b[36m👤 user:\u001b[22m\u001b[39m\nError: SyntaxError: Unexpected token '\u001b', \"\u001b[1m\u001b[36m\ud83d\"... is not valid JSON"],"location":{"line":87,"column":15}},{"ancestorTitles":["","CLI","Integration with fixtures"],"fullName":" CLI Integration with fixtures processes fixture with tool use lifecycle","status":"failed","title":"processes fixture with tool use lifecycle","duration":52,"failureMessages":["Failed to parse JSON line: \u001b[1m\u001b[36m👤 user:\u001b[22m\u001b[39m\nError: SyntaxError: Unexpected token '\u001b', \"\u001b[1m\u001b[36m\ud83d\"... is not valid JSON"],"location":{"line":87,"column":15}}],"startTime":1752838808208,"endTime":1752838809920,"status":"failed","message":"","name":"/Users/carl/Development/agents/agent-stream-fmt/src/__tests__/cli.test.ts"},{"assertionResults":[{"ancestorTitles":["","streamFormat","JSON format"],"fullName":" streamFormat JSON format should format Claude message events as JSON","status":"passed","title":"should format Claude message events as JSON","duration":2,"failureMessages":[]},{"ancestorTitles":["","streamFormat","JSON format"],"fullName":" streamFormat JSON format should format with pretty printing when compactMode is false","status":"passed","title":"should format with pretty printing when compactMode is false","duration":0,"failureMessages":[]},{"ancestorTitles":["","streamFormat","JSON format"],"fullName":" streamFormat JSON format should respect hideTools option","status":"passed","title":"should respect hideTools option","duration":1,"failureMessages":[]},{"ancestorTitles":["","streamFormat","JSON format"],"fullName":" streamFormat JSON format should add timestamps when showTimestamps is true","status":"passed","title":"should add timestamps when showTimestamps is true","duration":1,"failureMessages":[]},{"ancestorTitles":["","streamFormat","Error handling"],"fullName":" streamFormat Error handling should format parse errors as error events","status":"passed","title":"should format parse errors as error events","duration":0,"failureMessages":[]},{"ancestorTitles":["","streamFormat","Error handling"],"fullName":" streamFormat Error handling should continue on errors by default","status":"passed","title":"should continue on errors by default","duration":1,"failureMessages":[]},{"ancestorTitles":["","streamFormat","Renderer flush"],"fullName":" streamFormat Renderer flush should call renderer flush at the end","status":"passed","title":"should call renderer flush at the end","duration":0,"failureMessages":[]},{"ancestorTitles":["","streamFormat","Renderer flush"],"fullName":" streamFormat Renderer flush should flush even on stream error","status":"passed","title":"should flush even on stream error","duration":3,"failureMessages":[]}],"startTime":1752838808637,"endTime":1752838808645,"status":"passed","message":"","name":"/Users/carl/Development/agents/agent-stream-fmt/src/__tests__/stream-format.test.ts"},{"assertionResults":[{"ancestorTitles":["","Stream events","fixture processing"],"fullName":" Stream events fixture processing processes Claude basic messages","status":"passed","title":"processes Claude basic messages","duration":7,"failureMessages":[]},{"ancestorTitles":["","Stream events","fixture processing"],"fullName":" Stream events fixture processing auto-detects vendor format","status":"passed","title":"auto-detects vendor format","duration":2,"failureMessages":[]},{"ancestorTitles":["","Stream events","error handling"],"fullName":" Stream events error handling continues on parse errors by default","status":"passed","title":"continues on parse errors by default","duration":1,"failureMessages":[]},{"ancestorTitles":["","Stream events","error handling"],"fullName":" Stream events error handling stops on error when configured","status":"passed","title":"stops on error when configured","duration":1,"failureMessages":[]},{"ancestorTitles":["","Stream events","error handling"],"fullName":" Stream events error handling stops after max consecutive errors","status":"passed","title":"stops after max consecutive errors","duration":0,"failureMessages":[]},{"ancestorTitles":["","Stream events","debug events"],"fullName":" Stream events debug events emits debug events when enabled","status":"passed","title":"emits debug events when enabled","duration":2,"failureMessages":[]},{"ancestorTitles":["","Stream events","streaming behavior"],"fullName":" Stream events streaming behavior yields events as they are parsed","status":"passed","title":"yields events as they are parsed","duration":1,"failureMessages":[]}],"startTime":1752838808834,"endTime":1752838808849,"status":"passed","message":"","name":"/Users/carl/Development/agents/agent-stream-fmt/src/__tests__/stream.test.ts"},{"assertionResults":[{"ancestorTitles":["","ClaudeParser","detect"],"fullName":" ClaudeParser detect should detect valid Claude message events","status":"passed","title":"should detect valid Claude message events","duration":0,"failureMessages":[]},{"ancestorTitles":["","ClaudeParser","detect"],"fullName":" ClaudeParser detect should not detect invalid or non-Claude formats","status":"passed","title":"should not detect invalid or non-Claude formats","duration":0,"failureMessages":[]},{"ancestorTitles":["","ClaudeParser","detect"],"fullName":" ClaudeParser detect should not throw on invalid JSON","status":"passed","title":"should not throw on invalid JSON","duration":0,"failureMessages":[]},{"ancestorTitles":["","ClaudeParser","parse"],"fullName":" ClaudeParser parse should parse message events correctly","status":"passed","title":"should parse message events correctly","duration":1,"failureMessages":[]},{"ancestorTitles":["","ClaudeParser","parse"],"fullName":" ClaudeParser parse should parse tool_use events correctly","status":"passed","title":"should parse tool_use events correctly","duration":0,"failureMessages":[]},{"ancestorTitles":["","ClaudeParser","parse"],"fullName":" ClaudeParser parse should parse tool_result events correctly","status":"passed","title":"should parse tool_result events correctly","duration":1,"failureMessages":[]},{"ancestorTitles":["","ClaudeParser","parse"],"fullName":" ClaudeParser parse should parse usage events correctly","status":"passed","title":"should parse usage events correctly","duration":0,"failureMessages":[]},{"ancestorTitles":["","ClaudeParser","parse"],"fullName":" ClaudeParser parse should parse error events correctly","status":"passed","title":"should parse error events correctly","duration":0,"failureMessages":[]},{"ancestorTitles":["","ClaudeParser","parse"],"fullName":" ClaudeParser parse should handle unknown event types as debug events","status":"passed","title":"should handle unknown event types as debug events","duration":0,"failureMessages":[]},{"ancestorTitles":["","ClaudeParser","parse"],"fullName":" ClaudeParser parse should throw ParseError for invalid JSON","status":"passed","title":"should throw ParseError for invalid JSON","duration":0,"failureMessages":[]},{"ancestorTitles":["","ClaudeParser","parse"],"fullName":" ClaudeParser parse should handle empty usage events","status":"passed","title":"should handle empty usage events","duration":0,"failureMessages":[]},{"ancestorTitles":["","ClaudeParser","parse"],"fullName":" ClaudeParser parse should normalize invalid roles","status":"passed","title":"should normalize invalid roles","duration":0,"failureMessages":[]},{"ancestorTitles":["","ClaudeParser","parse"],"fullName":" ClaudeParser parse should handle missing fields gracefully","status":"passed","title":"should handle missing fields gracefully","duration":0,"failureMessages":[]},{"ancestorTitles":["","ClaudeParser","metadata"],"fullName":" ClaudeParser metadata should have correct vendor and metadata","status":"passed","title":"should have correct vendor and metadata","duration":0,"failureMessages":[]}],"startTime":1752838808793,"endTime":1752838808797,"status":"passed","message":"","name":"/Users/carl/Development/agents/agent-stream-fmt/src/parsers/claude.test.ts"},{"assertionResults":[{"ancestorTitles":["","Parser Registry Integration Tests","Claude fixtures"],"fullName":" Parser Registry Integration Tests Claude fixtures detects and parses basic-message.jsonl","status":"passed","title":"detects and parses basic-message.jsonl","duration":1,"failureMessages":[]},{"ancestorTitles":["","Parser Registry Integration Tests","Claude fixtures"],"fullName":" Parser Registry Integration Tests Claude fixtures detects and parses tool-use.jsonl","status":"passed","title":"detects and parses tool-use.jsonl","duration":0,"failureMessages":[]},{"ancestorTitles":["","Parser Registry Integration Tests","Claude fixtures"],"fullName":" Parser Registry Integration Tests Claude fixtures works with selectParser auto-detection","status":"passed","title":"works with selectParser auto-detection","duration":1,"failureMessages":[]},{"ancestorTitles":["","Parser Registry Integration Tests","Non-Claude fixtures"],"fullName":" Parser Registry Integration Tests Non-Claude fixtures does not detect Gemini format as Claude","status":"passed","title":"does not detect Gemini format as Claude","duration":0,"failureMessages":[]},{"ancestorTitles":["","Parser Registry Integration Tests","Non-Claude fixtures"],"fullName":" Parser Registry Integration Tests Non-Claude fixtures does not detect Amp format as Claude","status":"passed","title":"does not detect Amp format as Claude","duration":1,"failureMessages":[]},{"ancestorTitles":["","Parser Registry Integration Tests","Registry functionality"],"fullName":" Parser Registry Integration Tests Registry functionality has Claude parser registered by default","status":"passed","title":"has Claude parser registered by default","duration":0,"failureMessages":[]},{"ancestorTitles":["","Parser Registry Integration Tests","Registry functionality"],"fullName":" Parser Registry Integration Tests Registry functionality can retrieve Claude parser directly","status":"passed","title":"can retrieve Claude parser directly","duration":0,"failureMessages":[]},{"ancestorTitles":["","Parser Registry Integration Tests","Registry functionality"],"fullName":" Parser Registry Integration Tests Registry functionality priority system works correctly","status":"passed","title":"priority system works correctly","duration":0,"failureMessages":[]},{"ancestorTitles":["","Parser Registry Integration Tests","Error handling"],"fullName":" Parser Registry Integration Tests Error handling handles malformed JSON gracefully during detection","status":"passed","title":"handles malformed JSON gracefully during detection","duration":1,"failureMessages":[]},{"ancestorTitles":["","Parser Registry Integration Tests","Error handling"],"fullName":" Parser Registry Integration Tests Error handling handles empty lines gracefully","status":"passed","title":"handles empty lines gracefully","duration":0,"failureMessages":[]},{"ancestorTitles":["","Parser Registry Integration Tests","Error handling"],"fullName":" Parser Registry Integration Tests Error handling handles non-JSON lines gracefully","status":"passed","title":"handles non-JSON lines gracefully","duration":0,"failureMessages":[]},{"ancestorTitles":["","Parser Registry Integration Tests","Error handling"],"fullName":" Parser Registry Integration Tests Error handling selectParser throws appropriate errors","status":"passed","title":"selectParser throws appropriate errors","duration":0,"failureMessages":[]}],"startTime":1752838808836,"endTime":1752838808840,"status":"passed","message":"","name":"/Users/carl/Development/agents/agent-stream-fmt/src/parsers/integration.test.ts"},{"assertionResults":[{"ancestorTitles":["","ParserRegistry","constructor"],"fullName":" ParserRegistry constructor initializes with all default parsers registered","status":"passed","title":"initializes with all default parsers registered","duration":1,"failureMessages":[]},{"ancestorTitles":["","ParserRegistry","constructor"],"fullName":" ParserRegistry constructor registers Claude parser with priority 100","status":"passed","title":"registers Claude parser with priority 100","duration":0,"failureMessages":[]},{"ancestorTitles":["","ParserRegistry","registerParser"],"fullName":" ParserRegistry registerParser registers a parser with default priority","status":"passed","title":"registers a parser with default priority","duration":0,"failureMessages":[]},{"ancestorTitles":["","ParserRegistry","registerParser"],"fullName":" ParserRegistry registerParser registers a parser with custom priority","status":"passed","title":"registers a parser with custom priority","duration":1,"failureMessages":[]},{"ancestorTitles":["","ParserRegistry","registerParser"],"fullName":" ParserRegistry registerParser replaces existing parser with same vendor name","status":"passed","title":"replaces existing parser with same vendor name","duration":0,"failureMessages":[]},{"ancestorTitles":["","ParserRegistry","registerParser"],"fullName":" ParserRegistry registerParser throws error for null parser","status":"passed","title":"throws error for null parser","duration":0,"failureMessages":[]},{"ancestorTitles":["","ParserRegistry","registerParser"],"fullName":" ParserRegistry registerParser throws error for undefined parser","status":"passed","title":"throws error for undefined parser","duration":0,"failureMessages":[]},{"ancestorTitles":["","ParserRegistry","registerParser"],"fullName":" ParserRegistry registerParser throws error for parser with empty vendor name","status":"passed","title":"throws error for parser with empty vendor name","duration":1,"failureMessages":[]},{"ancestorTitles":["","ParserRegistry","registerParser"],"fullName":" ParserRegistry registerParser throws error for parser with whitespace-only vendor name","status":"passed","title":"throws error for parser with whitespace-only vendor name","duration":0,"failureMessages":[]},{"ancestorTitles":["","ParserRegistry","registerParser"],"fullName":" ParserRegistry registerParser throws error for parser with auto vendor name","status":"passed","title":"throws error for parser with auto vendor name","duration":0,"failureMessages":[]},{"ancestorTitles":["","ParserRegistry","registerParser"],"fullName":" ParserRegistry registerParser throws error for invalid priority","status":"passed","title":"throws error for invalid priority","duration":0,"failureMessages":[]},{"ancestorTitles":["","ParserRegistry","getParser"],"fullName":" ParserRegistry getParser returns parser for existing vendor","status":"passed","title":"returns parser for existing vendor","duration":0,"failureMessages":[]},{"ancestorTitles":["","ParserRegistry","getParser"],"fullName":" ParserRegistry getParser returns null for non-existing vendor","status":"passed","title":"returns null for non-existing vendor","duration":0,"failureMessages":[]},{"ancestorTitles":["","ParserRegistry","getParser"],"fullName":" ParserRegistry getParser returns null for auto vendor","status":"passed","title":"returns null for auto vendor","duration":0,"failureMessages":[]},{"ancestorTitles":["","ParserRegistry","detectVendor"],"fullName":" ParserRegistry detectVendor detects Claude format correctly","status":"passed","title":"detects Claude format correctly","duration":0,"failureMessages":[]},{"ancestorTitles":["","ParserRegistry","detectVendor"],"fullName":" ParserRegistry detectVendor returns null for unrecognized format","status":"passed","title":"returns null for unrecognized format","duration":0,"failureMessages":[]},{"ancestorTitles":["","ParserRegistry","detectVendor"],"fullName":" ParserRegistry detectVendor returns null for empty line","status":"passed","title":"returns null for empty line","duration":0,"failureMessages":[]},{"ancestorTitles":["","ParserRegistry","detectVendor"],"fullName":" ParserRegistry detectVendor returns null for non-string input","status":"passed","title":"returns null for non-string input","duration":0,"failureMessages":[]},{"ancestorTitles":["","ParserRegistry","detectVendor"],"fullName":" ParserRegistry detectVendor respects parser priority order","status":"passed","title":"respects parser priority order","duration":0,"failureMessages":[]},{"ancestorTitles":["","ParserRegistry","detectVendor"],"fullName":" ParserRegistry detectVendor handles parser detection errors gracefully","status":"passed","title":"handles parser detection errors gracefully","duration":4,"failureMessages":[]},{"ancestorTitles":["","ParserRegistry","listParsers"],"fullName":" ParserRegistry listParsers returns list of registered vendors","status":"passed","title":"returns list of registered vendors","duration":0,"failureMessages":[]},{"ancestorTitles":["","ParserRegistry","listParsers"],"fullName":" ParserRegistry listParsers returns sorted list","status":"passed","title":"returns sorted list","duration":0,"failureMessages":[]},{"ancestorTitles":["","ParserRegistry","listParsers"],"fullName":" ParserRegistry listParsers returns empty array for empty registry","status":"passed","title":"returns empty array for empty registry","duration":0,"failureMessages":[]},{"ancestorTitles":["","ParserRegistry","size"],"fullName":" ParserRegistry size returns correct size","status":"passed","title":"returns correct size","duration":0,"failureMessages":[]},{"ancestorTitles":["","ParserRegistry","hasParser"],"fullName":" ParserRegistry hasParser returns true for existing parser","status":"passed","title":"returns true for existing parser","duration":0,"failureMessages":[]},{"ancestorTitles":["","ParserRegistry","hasParser"],"fullName":" ParserRegistry hasParser returns false for non-existing parser","status":"passed","title":"returns false for non-existing parser","duration":1,"failureMessages":[]},{"ancestorTitles":["","ParserRegistry","unregisterParser"],"fullName":" ParserRegistry unregisterParser removes existing parser","status":"passed","title":"removes existing parser","duration":0,"failureMessages":[]},{"ancestorTitles":["","ParserRegistry","unregisterParser"],"fullName":" ParserRegistry unregisterParser returns false for non-existing parser","status":"passed","title":"returns false for non-existing parser","duration":0,"failureMessages":[]},{"ancestorTitles":["","ParserRegistry","clear"],"fullName":" ParserRegistry clear removes all parsers","status":"passed","title":"removes all parsers","duration":0,"failureMessages":[]},{"ancestorTitles":["","Default registry and convenience functions","default registry"],"fullName":" Default registry and convenience functions default registry is initialized with all default parsers","status":"passed","title":"is initialized with all default parsers","duration":0,"failureMessages":[]},{"ancestorTitles":["","Default registry and convenience functions","registerParser function"],"fullName":" Default registry and convenience functions registerParser function registers parser with default registry","status":"passed","title":"registers parser with default registry","duration":0,"failureMessages":[]},{"ancestorTitles":["","Default registry and convenience functions","getParser function"],"fullName":" Default registry and convenience functions getParser function retrieves parser from default registry","status":"passed","title":"retrieves parser from default registry","duration":0,"failureMessages":[]},{"ancestorTitles":["","Default registry and convenience functions","getParser function"],"fullName":" Default registry and convenience functions getParser function returns null for non-existing parser","status":"passed","title":"returns null for non-existing parser","duration":0,"failureMessages":[]},{"ancestorTitles":["","Default registry and convenience functions","detectVendor function"],"fullName":" Default registry and convenience functions detectVendor function detects vendor using default registry","status":"passed","title":"detects vendor using default registry","duration":1,"failureMessages":[]},{"ancestorTitles":["","Default registry and convenience functions","detectVendor function"],"fullName":" Default registry and convenience functions detectVendor function returns null for unrecognized format","status":"passed","title":"returns null for unrecognized format","duration":0,"failureMessages":[]},{"ancestorTitles":["","Default registry and convenience functions","listParsers function"],"fullName":" Default registry and convenience functions listParsers function returns vendors from default registry","status":"passed","title":"returns vendors from default registry","duration":0,"failureMessages":[]},{"ancestorTitles":["","Default registry and convenience functions","selectParser function"],"fullName":" Default registry and convenience functions selectParser function returns specific parser for known vendor","status":"passed","title":"returns specific parser for known vendor","duration":0,"failureMessages":[]},{"ancestorTitles":["","Default registry and convenience functions","selectParser function"],"fullName":" Default registry and convenience functions selectParser function throws error for unknown vendor","status":"passed","title":"throws error for unknown vendor","duration":0,"failureMessages":[]},{"ancestorTitles":["","Default registry and convenience functions","selectParser function"],"fullName":" Default registry and convenience functions selectParser function auto-detects vendor when vendor is auto","status":"passed","title":"auto-detects vendor when vendor is auto","duration":0,"failureMessages":[]},{"ancestorTitles":["","Default registry and convenience functions","selectParser function"],"fullName":" Default registry and convenience functions selectParser function throws error for auto without firstLine","status":"passed","title":"throws error for auto without firstLine","duration":0,"failureMessages":[]},{"ancestorTitles":["","Default registry and convenience functions","selectParser function"],"fullName":" Default registry and convenience functions selectParser function throws error for auto with unrecognized format","status":"passed","title":"throws error for auto with unrecognized format","duration":1,"failureMessages":[]},{"ancestorTitles":["","Integration tests with real fixtures"],"fullName":" Integration tests with real fixtures detects Claude format from real fixture","status":"passed","title":"detects Claude format from real fixture","duration":0,"failureMessages":[]},{"ancestorTitles":["","Integration tests with real fixtures"],"fullName":" Integration tests with real fixtures detects Claude tool_use format","status":"passed","title":"detects Claude tool_use format","duration":0,"failureMessages":[]},{"ancestorTitles":["","Integration tests with real fixtures"],"fullName":" Integration tests with real fixtures detects Claude usage format","status":"passed","title":"detects Claude usage format","duration":0,"failureMessages":[]},{"ancestorTitles":["","Integration tests with real fixtures"],"fullName":" Integration tests with real fixtures does not detect non-Claude format","status":"passed","title":"does not detect non-Claude format","duration":0,"failureMessages":[]}],"startTime":1752838808566,"endTime":1752838808577,"status":"passed","message":"","name":"/Users/carl/Development/agents/agent-stream-fmt/src/parsers/registry.test.ts"},{"assertionResults":[{"ancestorTitles":["","Parser Types","VendorParser interface"],"fullName":" Parser Types VendorParser interface should enforce the correct interface structure","status":"passed","title":"should enforce the correct interface structure","duration":1,"failureMessages":[]},{"ancestorTitles":["","Parser Types","VendorParser interface"],"fullName":" Parser Types VendorParser interface should work with minimal required properties","status":"passed","title":"should work with minimal required properties","duration":1,"failureMessages":[]},{"ancestorTitles":["","Parser Types","ParserEntry interface"],"fullName":" Parser Types ParserEntry interface should properly structure parser entries","status":"passed","title":"should properly structure parser entries","duration":0,"failureMessages":[]},{"ancestorTitles":["","Parser Types","ParseError class"],"fullName":" Parser Types ParseError class should create error with all properties","status":"passed","title":"should create error with all properties","duration":0,"failureMessages":[]},{"ancestorTitles":["","Parser Types","ParseError class"],"fullName":" Parser Types ParseError class should work without cause","status":"passed","title":"should work without cause","duration":0,"failureMessages":[]},{"ancestorTitles":["","Parser Types","ParseError class"],"fullName":" Parser Types ParseError class should be throwable and catchable","status":"passed","title":"should be throwable and catchable","duration":1,"failureMessages":[]},{"ancestorTitles":["","Parser Types","Type compatibility"],"fullName":" Parser Types Type compatibility should work with AgentEvent types","status":"passed","title":"should work with AgentEvent types","duration":0,"failureMessages":[]}],"startTime":1752838808905,"endTime":1752838808908,"status":"passed","message":"","name":"/Users/carl/Development/agents/agent-stream-fmt/src/parsers/types.test.ts"},{"assertionResults":[{"ancestorTitles":["","createLineReader","Basic Functionality"],"fullName":" createLineReader Basic Functionality should handle complete lines","status":"passed","title":"should handle complete lines","duration":2,"failureMessages":[]},{"ancestorTitles":["","createLineReader","Basic Functionality"],"fullName":" createLineReader Basic Functionality should handle partial lines across chunks","status":"passed","title":"should handle partial lines across chunks","duration":1,"failureMessages":[]},{"ancestorTitles":["","createLineReader","Basic Functionality"],"fullName":" createLineReader Basic Functionality should handle missing final newline","status":"passed","title":"should handle missing final newline","duration":0,"failureMessages":[]},{"ancestorTitles":["","createLineReader","Basic Functionality"],"fullName":" createLineReader Basic Functionality should handle empty stream","status":"passed","title":"should handle empty stream","duration":0,"failureMessages":[]},{"ancestorTitles":["","createLineReader","Basic Functionality"],"fullName":" createLineReader Basic Functionality should handle stream with only newlines","status":"passed","title":"should handle stream with only newlines","duration":0,"failureMessages":[]},{"ancestorTitles":["","createLineReader","Basic Functionality"],"fullName":" createLineReader Basic Functionality should handle mixed empty and non-empty lines","status":"passed","title":"should handle mixed empty and non-empty lines","duration":1,"failureMessages":[]},{"ancestorTitles":["","createLineReader","Basic Functionality"],"fullName":" createLineReader Basic Functionality should include empty lines when includeEmpty is true","status":"passed","title":"should include empty lines when includeEmpty is true","duration":0,"failureMessages":[]},{"ancestorTitles":["","createLineReader","Basic Functionality"],"fullName":" createLineReader Basic Functionality should handle lines with only whitespace","status":"passed","title":"should handle lines with only whitespace","duration":0,"failureMessages":[]},{"ancestorTitles":["","createLineReader","Max Line Length Enforcement"],"fullName":" createLineReader Max Line Length Enforcement should truncate lines exceeding max length","status":"passed","title":"should truncate lines exceeding max length","duration":1,"failureMessages":[]},{"ancestorTitles":["","createLineReader","Max Line Length Enforcement"],"fullName":" createLineReader Max Line Length Enforcement should handle very long lines without newlines","status":"passed","title":"should handle very long lines without newlines","duration":0,"failureMessages":[]},{"ancestorTitles":["","createLineReader","Max Line Length Enforcement"],"fullName":" createLineReader Max Line Length Enforcement should handle long lines with newlines within max length","status":"passed","title":"should handle long lines with newlines within max length","duration":0,"failureMessages":[]},{"ancestorTitles":["","createLineReader","Max Line Length Enforcement"],"fullName":" createLineReader Max Line Length Enforcement should handle chunks that individually exceed max length","status":"passed","title":"should handle chunks that individually exceed max length","duration":1,"failureMessages":[]},{"ancestorTitles":["","createLineReader","Max Line Length Enforcement"],"fullName":" createLineReader Max Line Length Enforcement should handle very small max line length","status":"passed","title":"should handle very small max line length","duration":0,"failureMessages":[]},{"ancestorTitles":["","createLineReader","Encoding Support"],"fullName":" createLineReader Encoding Support should handle UTF-8 content correctly","status":"passed","title":"should handle UTF-8 content correctly","duration":0,"failureMessages":[]},{"ancestorTitles":["","createLineReader","Encoding Support"],"fullName":" createLineReader Encoding Support should respect existing stream encoding","status":"passed","title":"should respect existing stream encoding","duration":1,"failureMessages":[]},{"ancestorTitles":["","createLineReader","Encoding Support"],"fullName":" createLineReader Encoding Support should set encoding when not already set","status":"passed","title":"should set encoding when not already set","duration":0,"failureMessages":[]},{"ancestorTitles":["","createLineReader","Resource Cleanup"],"fullName":" createLineReader Resource Cleanup should destroy stream after reading","status":"passed","title":"should destroy stream after reading","duration":1,"failureMessages":[]},{"ancestorTitles":["","createLineReader","Resource Cleanup"],"fullName":" createLineReader Resource Cleanup should destroy stream on error","status":"passed","title":"should destroy stream on error","duration":3,"failureMessages":[]},{"ancestorTitles":["","createLineReader","Resource Cleanup"],"fullName":" createLineReader Resource Cleanup should not destroy already destroyed stream","status":"passed","title":"should not destroy already destroyed stream","duration":1,"failureMessages":[]},{"ancestorTitles":["","createLineReader","Edge Cases"],"fullName":" createLineReader Edge Cases should handle single character lines","status":"passed","title":"should handle single character lines","duration":0,"failureMessages":[]},{"ancestorTitles":["","createLineReader","Edge Cases"],"fullName":" createLineReader Edge Cases should handle carriage return line feeds (CRLF)","status":"passed","title":"should handle carriage return line feeds (CRLF)","duration":0,"failureMessages":[]},{"ancestorTitles":["","createLineReader","Edge Cases"],"fullName":" createLineReader Edge Cases should handle null chunks gracefully","status":"passed","title":"should handle null chunks gracefully","duration":0,"failureMessages":[]},{"ancestorTitles":["","createLineReader","Edge Cases"],"fullName":" createLineReader Edge Cases should handle very small max line length with chunks","status":"passed","title":"should handle very small max line length with chunks","duration":0,"failureMessages":[]},{"ancestorTitles":["","createLineReader","Performance and Memory"],"fullName":" createLineReader Performance and Memory should handle large number of lines efficiently","status":"passed","title":"should handle large number of lines efficiently","duration":6,"failureMessages":[]},{"ancestorTitles":["","createLineReader","Performance and Memory"],"fullName":" createLineReader Performance and Memory should stream lines without buffering entire content","status":"passed","title":"should stream lines without buffering entire content","duration":0,"failureMessages":[]},{"ancestorTitles":["","createLineReaderWithLineNumbers"],"fullName":" createLineReaderWithLineNumbers should track line numbers correctly","status":"passed","title":"should track line numbers correctly","duration":1,"failureMessages":[]},{"ancestorTitles":["","createLineReaderWithLineNumbers"],"fullName":" createLineReaderWithLineNumbers should track line numbers with empty lines excluded","status":"passed","title":"should track line numbers with empty lines excluded","duration":0,"failureMessages":[]},{"ancestorTitles":["","createLineReaderWithLineNumbers"],"fullName":" createLineReaderWithLineNumbers should track line numbers with empty lines included","status":"passed","title":"should track line numbers with empty lines included","duration":0,"failureMessages":[]},{"ancestorTitles":["","createLineReaderWithLineNumbers"],"fullName":" createLineReaderWithLineNumbers should inherit all options from base createLineReader","status":"passed","title":"should inherit all options from base createLineReader","duration":1,"failureMessages":[]}],"startTime":1752838808571,"endTime":1752838808591,"status":"passed","message":"","name":"/Users/carl/Development/agents/agent-stream-fmt/src/utils/__tests__/line-reader.test.ts"},{"assertionResults":[{"ancestorTitles":["","AnsiRenderer","Message Events"],"fullName":" AnsiRenderer Message Events should render user messages with correct icon and color","status":"passed","title":"should render user messages with correct icon and color","duration":1,"failureMessages":[]},{"ancestorTitles":["","AnsiRenderer","Message Events"],"fullName":" AnsiRenderer Message Events should render assistant messages with correct icon and color","status":"passed","title":"should render assistant messages with correct icon and color","duration":1,"failureMessages":[]},{"ancestorTitles":["","AnsiRenderer","Message Events"],"fullName":" AnsiRenderer Message Events should render system messages with correct icon and color","status":"passed","title":"should render system messages with correct icon and color","duration":0,"failureMessages":[]},{"ancestorTitles":["","AnsiRenderer","Message Events"],"fullName":" AnsiRenderer Message Events should format markdown-like content","status":"passed","title":"should format markdown-like content","duration":0,"failureMessages":[]},{"ancestorTitles":["","AnsiRenderer","Message Events"],"fullName":" AnsiRenderer Message Events should handle multi-line messages","status":"passed","title":"should handle multi-line messages","duration":0,"failureMessages":[]},{"ancestorTitles":["","AnsiRenderer","Tool Events"],"fullName":" AnsiRenderer Tool Events should render tool start phase","status":"passed","title":"should render tool start phase","duration":0,"failureMessages":[]},{"ancestorTitles":["","AnsiRenderer","Tool Events"],"fullName":" AnsiRenderer Tool Events should render tool stdout","status":"passed","title":"should render tool stdout","duration":1,"failureMessages":[]},{"ancestorTitles":["","AnsiRenderer","Tool Events"],"fullName":" AnsiRenderer Tool Events should render tool stderr differently","status":"passed","title":"should render tool stderr differently","duration":0,"failureMessages":[]},{"ancestorTitles":["","AnsiRenderer","Tool Events"],"fullName":" AnsiRenderer Tool Events should render tool end with success","status":"passed","title":"should render tool end with success","duration":0,"failureMessages":[]},{"ancestorTitles":["","AnsiRenderer","Tool Events"],"fullName":" AnsiRenderer Tool Events should render tool end with failure","status":"passed","title":"should render tool end with failure","duration":0,"failureMessages":[]},{"ancestorTitles":["","AnsiRenderer","Tool Events"],"fullName":" AnsiRenderer Tool Events should collapse tool output when option is set","status":"passed","title":"should collapse tool output when option is set","duration":0,"failureMessages":[]},{"ancestorTitles":["","AnsiRenderer","Tool Events"],"fullName":" AnsiRenderer Tool Events should hide tools when option is set","status":"passed","title":"should hide tools when option is set","duration":0,"failureMessages":[]},{"ancestorTitles":["","AnsiRenderer","Cost Events"],"fullName":" AnsiRenderer Cost Events should render cost information","status":"passed","title":"should render cost information","duration":0,"failureMessages":[]},{"ancestorTitles":["","AnsiRenderer","Cost Events"],"fullName":" AnsiRenderer Cost Events should hide cost when option is set","status":"passed","title":"should hide cost when option is set","duration":1,"failureMessages":[]},{"ancestorTitles":["","AnsiRenderer","Error Events"],"fullName":" AnsiRenderer Error Events should render errors with bold red text","status":"passed","title":"should render errors with bold red text","duration":0,"failureMessages":[]},{"ancestorTitles":["","AnsiRenderer","Debug Events"],"fullName":" AnsiRenderer Debug Events should render debug information","status":"passed","title":"should render debug information","duration":0,"failureMessages":[]},{"ancestorTitles":["","AnsiRenderer","Debug Events"],"fullName":" AnsiRenderer Debug Events should hide debug when option is set","status":"passed","title":"should hide debug when option is set","duration":0,"failureMessages":[]},{"ancestorTitles":["","AnsiRenderer","Batch Rendering"],"fullName":" AnsiRenderer Batch Rendering should render multiple events in batch","status":"passed","title":"should render multiple events in batch","duration":0,"failureMessages":[]},{"ancestorTitles":["","AnsiRenderer","Flush"],"fullName":" AnsiRenderer Flush should return empty string when no pending tools","status":"passed","title":"should return empty string when no pending tools","duration":0,"failureMessages":[]},{"ancestorTitles":["","AnsiRenderer","Flush"],"fullName":" AnsiRenderer Flush should warn about pending tools","status":"passed","title":"should warn about pending tools","duration":0,"failureMessages":[]},{"ancestorTitles":["","AnsiRenderer","Color Disabled"],"fullName":" AnsiRenderer Color Disabled should not include ANSI codes when colors are disabled","status":"passed","title":"should not include ANSI codes when colors are disabled","duration":1,"failureMessages":[]},{"ancestorTitles":["","AnsiRenderer","Edge Cases"],"fullName":" AnsiRenderer Edge Cases should handle empty messages gracefully","status":"passed","title":"should handle empty messages gracefully","duration":0,"failureMessages":[]},{"ancestorTitles":["","AnsiRenderer","Edge Cases"],"fullName":" AnsiRenderer Edge Cases should handle missing tool name gracefully","status":"passed","title":"should handle missing tool name gracefully","duration":1,"failureMessages":[]},{"ancestorTitles":["","AnsiRenderer","Edge Cases"],"fullName":" AnsiRenderer Edge Cases should handle very long tool output lines","status":"passed","title":"should handle very long tool output lines","duration":0,"failureMessages":[]},{"ancestorTitles":["","AnsiRenderer","Edge Cases"],"fullName":" AnsiRenderer Edge Cases should handle tool output with special characters","status":"passed","title":"should handle tool output with special characters","duration":0,"failureMessages":[]},{"ancestorTitles":["","AnsiRenderer","Edge Cases"],"fullName":" AnsiRenderer Edge Cases should handle undefined text in tool events","status":"passed","title":"should handle undefined text in tool events","duration":1,"failureMessages":[]},{"ancestorTitles":["","AnsiRenderer","Edge Cases"],"fullName":" AnsiRenderer Edge Cases should handle messages with only whitespace","status":"passed","title":"should handle messages with only whitespace","duration":0,"failureMessages":[]},{"ancestorTitles":["","AnsiRenderer","Edge Cases"],"fullName":" AnsiRenderer Edge Cases should handle rapid tool state changes","status":"passed","title":"should handle rapid tool state changes","duration":0,"failureMessages":[]},{"ancestorTitles":["","AnsiRenderer","Edge Cases"],"fullName":" AnsiRenderer Edge Cases should handle missing exitCode in tool end","status":"passed","title":"should handle missing exitCode in tool end","duration":0,"failureMessages":[]},{"ancestorTitles":["","AnsiRenderer","Complex Formatting"],"fullName":" AnsiRenderer Complex Formatting should handle nested markdown-like formatting","status":"failed","title":"should handle nested markdown-like formatting","duration":5,"failureMessages":["expected null to be truthy"],"location":{"line":511,"column":27}},{"ancestorTitles":["","AnsiRenderer","Complex Formatting"],"fullName":" AnsiRenderer Complex Formatting should handle code blocks","status":"failed","title":"should handle code blocks","duration":1,"failureMessages":["expected '🤖 assistant:\\n```\\n  function hello(…' to contain '\\u001b[33m'"],"location":{"line":524,"column":22}},{"ancestorTitles":["","AnsiRenderer","Complex Formatting"],"fullName":" AnsiRenderer Complex Formatting should handle mixed formatting in tool output","status":"passed","title":"should handle mixed formatting in tool output","duration":0,"failureMessages":[]},{"ancestorTitles":["","AnsiRenderer","Tool Context Tracking"],"fullName":" AnsiRenderer Tool Context Tracking should track multiple concurrent tools","status":"passed","title":"should track multiple concurrent tools","duration":0,"failureMessages":[]},{"ancestorTitles":["","AnsiRenderer","Tool Context Tracking"],"fullName":" AnsiRenderer Tool Context Tracking should handle tool output before tool start gracefully","status":"passed","title":"should handle tool output before tool start gracefully","duration":0,"failureMessages":[]},{"ancestorTitles":["","AnsiRenderer","Tool Context Tracking"],"fullName":" AnsiRenderer Tool Context Tracking should handle tool end without start gracefully","status":"passed","title":"should handle tool end without start gracefully","duration":0,"failureMessages":[]},{"ancestorTitles":["","AnsiRenderer","Unknown Event Types"],"fullName":" AnsiRenderer Unknown Event Types should handle unknown event types gracefully","status":"failed","title":"should handle unknown event types gracefully","duration":1,"failureMessages":["expected '❓ Unknown event type: {\"t\":\"future-ev…' to contain '❓ Unknown event:'"],"location":{"line":614,"column":24}},{"ancestorTitles":["","AnsiRenderer","Cost Formatting"],"fullName":" AnsiRenderer Cost Formatting should format very small costs correctly","status":"passed","title":"should format very small costs correctly","duration":0,"failureMessages":[]},{"ancestorTitles":["","AnsiRenderer","Cost Formatting"],"fullName":" AnsiRenderer Cost Formatting should format large costs correctly","status":"passed","title":"should format large costs correctly","duration":0,"failureMessages":[]},{"ancestorTitles":["","AnsiRenderer","Cost Formatting"],"fullName":" AnsiRenderer Cost Formatting should handle negative costs","status":"failed","title":"should handle negative costs","duration":1,"failureMessages":["expected '💰 $-0.5000\\n' to contain '-$0.5000'"],"location":{"line":653,"column":24}},{"ancestorTitles":["","AnsiRenderer","Memory Safety"],"fullName":" AnsiRenderer Memory Safety should not accumulate state over many renders","status":"passed","title":"should not accumulate state over many renders","duration":21,"failureMessages":[]},{"ancestorTitles":["","AnsiRenderer","Integration with Real Fixtures"],"fullName":" AnsiRenderer Integration with Real Fixtures should handle real Claude fixture data","status":"passed","title":"should handle real Claude fixture data","duration":1,"failureMessages":[]},{"ancestorTitles":["","AnsiRenderer","Advanced Edge Cases"],"fullName":" AnsiRenderer Advanced Edge Cases should handle null and undefined values gracefully","status":"failed","title":"should handle null and undefined values gracefully","duration":1,"failureMessages":["expected [Function] to not throw an error but 'TypeError: Cannot read properties of …' was thrown"],"location":{"line":709,"column":52}},{"ancestorTitles":["","AnsiRenderer","Advanced Edge Cases"],"fullName":" AnsiRenderer Advanced Edge Cases should handle circular references in debug events","status":"failed","title":"should handle circular references in debug events","duration":1,"failureMessages":["expected [Function] to not throw an error but 'TypeError: Converting circular struct…' was thrown"],"location":{"line":729,"column":48}},{"ancestorTitles":["","AnsiRenderer","Advanced Edge Cases"],"fullName":" AnsiRenderer Advanced Edge Cases should handle extremely long single-line text","status":"passed","title":"should handle extremely long single-line text","duration":0,"failureMessages":[]},{"ancestorTitles":["","AnsiRenderer","Advanced Edge Cases"],"fullName":" AnsiRenderer Advanced Edge Cases should handle control characters in text","status":"passed","title":"should handle control characters in text","duration":1,"failureMessages":[]},{"ancestorTitles":["","AnsiRenderer","Advanced Edge Cases"],"fullName":" AnsiRenderer Advanced Edge Cases should handle malformed markdown gracefully","status":"passed","title":"should handle malformed markdown gracefully","duration":0,"failureMessages":[]},{"ancestorTitles":["","AnsiRenderer","Complex Tool Scenarios"],"fullName":" AnsiRenderer Complex Tool Scenarios should handle interleaved tool executions","status":"passed","title":"should handle interleaved tool executions","duration":0,"failureMessages":[]},{"ancestorTitles":["","AnsiRenderer","Complex Tool Scenarios"],"fullName":" AnsiRenderer Complex Tool Scenarios should handle tools with very long output in collapsed mode","status":"failed","title":"should handle tools with very long output in collapsed mode","duration":1,"failureMessages":["expected '  └─ Build output line 0: Processing …' to contain '(1000 lines)'"],"location":{"line":817,"column":24}},{"ancestorTitles":["","AnsiRenderer","Complex Tool Scenarios"],"fullName":" AnsiRenderer Complex Tool Scenarios should handle tool errors with stderr","status":"passed","title":"should handle tool errors with stderr","duration":0,"failureMessages":[]},{"ancestorTitles":["","AnsiRenderer","Performance Characteristics"],"fullName":" AnsiRenderer Performance Characteristics should handle rapid event sequences without delays","status":"passed","title":"should handle rapid event sequences without delays","duration":5,"failureMessages":[]},{"ancestorTitles":["","AnsiRenderer","Performance Characteristics"],"fullName":" AnsiRenderer Performance Characteristics should maintain constant memory with large event streams","status":"passed","title":"should maintain constant memory with large event streams","duration":28,"failureMessages":[]},{"ancestorTitles":["","AnsiRenderer","ANSI Code Injection Prevention"],"fullName":" AnsiRenderer ANSI Code Injection Prevention should not allow ANSI code injection through user text","status":"failed","title":"should not allow ANSI code injection through user text","duration":1,"failureMessages":["expected '👤 user:\\n  Normal text \\u001b[31mRED…' to contain '\\x1b[31m'"],"location":{"line":886,"column":22}},{"ancestorTitles":["","AnsiRenderer","ANSI Code Injection Prevention"],"fullName":" AnsiRenderer ANSI Code Injection Prevention should sanitize tool names that contain ANSI codes","status":"failed","title":"should sanitize tool names that contain ANSI codes","duration":0,"failureMessages":["expected '🔧 tool\\u001b[31mRED\\n' to contain 'tool\\x1b[31mRED'"],"location":{"line":897,"column":22}},{"ancestorTitles":["","AnsiRenderer","State Recovery"],"fullName":" AnsiRenderer State Recovery should recover from inconsistent tool states","status":"passed","title":"should recover from inconsistent tool states","duration":0,"failureMessages":[]}],"startTime":1752838808211,"endTime":1752838808286,"status":"failed","message":"","name":"/Users/carl/Development/agents/agent-stream-fmt/tests/render/ansi.test.ts"},{"assertionResults":[{"ancestorTitles":["","HtmlRenderer","Message Events"],"fullName":" HtmlRenderer Message Events should render user messages with semantic HTML","status":"passed","title":"should render user messages with semantic HTML","duration":1,"failureMessages":[]},{"ancestorTitles":["","HtmlRenderer","Message Events"],"fullName":" HtmlRenderer Message Events should render assistant messages with correct structure","status":"passed","title":"should render assistant messages with correct structure","duration":0,"failureMessages":[]},{"ancestorTitles":["","HtmlRenderer","Message Events"],"fullName":" HtmlRenderer Message Events should render system messages with appropriate styling","status":"passed","title":"should render system messages with appropriate styling","duration":0,"failureMessages":[]},{"ancestorTitles":["","HtmlRenderer","Message Events"],"fullName":" HtmlRenderer Message Events should escape HTML entities to prevent XSS","status":"failed","title":"should escape HTML entities to prevent XSS","duration":5,"failureMessages":["expected '<div class=\"message message-user\">\\n …' not to contain 'onerror='"],"location":{"line":80,"column":26}},{"ancestorTitles":["","HtmlRenderer","Message Events"],"fullName":" HtmlRenderer Message Events should handle markdown-like formatting after escaping","status":"passed","title":"should handle markdown-like formatting after escaping","duration":1,"failureMessages":[]},{"ancestorTitles":["","HtmlRenderer","Message Events"],"fullName":" HtmlRenderer Message Events should convert newlines to <br> tags","status":"passed","title":"should convert newlines to <br> tags","duration":0,"failureMessages":[]},{"ancestorTitles":["","HtmlRenderer","Message Events"],"fullName":" HtmlRenderer Message Events should handle empty text gracefully","status":"passed","title":"should handle empty text gracefully","duration":0,"failureMessages":[]},{"ancestorTitles":["","HtmlRenderer","Tool Events"],"fullName":" HtmlRenderer Tool Events should render tool start phase with proper structure","status":"passed","title":"should render tool start phase with proper structure","duration":0,"failureMessages":[]},{"ancestorTitles":["","HtmlRenderer","Tool Events"],"fullName":" HtmlRenderer Tool Events should render tool stdout with proper escaping","status":"passed","title":"should render tool stdout with proper escaping","duration":0,"failureMessages":[]},{"ancestorTitles":["","HtmlRenderer","Tool Events"],"fullName":" HtmlRenderer Tool Events should render tool stderr with different class","status":"passed","title":"should render tool stderr with different class","duration":0,"failureMessages":[]},{"ancestorTitles":["","HtmlRenderer","Tool Events"],"fullName":" HtmlRenderer Tool Events should render tool end with success status","status":"passed","title":"should render tool end with success status","duration":1,"failureMessages":[]},{"ancestorTitles":["","HtmlRenderer","Tool Events"],"fullName":" HtmlRenderer Tool Events should render tool end with error status","status":"passed","title":"should render tool end with error status","duration":0,"failureMessages":[]},{"ancestorTitles":["","HtmlRenderer","Tool Events"],"fullName":" HtmlRenderer Tool Events should track tool state across phases","status":"passed","title":"should track tool state across phases","duration":0,"failureMessages":[]},{"ancestorTitles":["","HtmlRenderer","Tool Events"],"fullName":" HtmlRenderer Tool Events should hide tools when option is set","status":"passed","title":"should hide tools when option is set","duration":0,"failureMessages":[]},{"ancestorTitles":["","HtmlRenderer","Tool Events"],"fullName":" HtmlRenderer Tool Events should escape tool names to prevent injection","status":"passed","title":"should escape tool names to prevent injection","duration":0,"failureMessages":[]},{"ancestorTitles":["","HtmlRenderer","Cost Events"],"fullName":" HtmlRenderer Cost Events should render cost information with proper formatting","status":"passed","title":"should render cost information with proper formatting","duration":0,"failureMessages":[]},{"ancestorTitles":["","HtmlRenderer","Cost Events"],"fullName":" HtmlRenderer Cost Events should format small costs correctly","status":"passed","title":"should format small costs correctly","duration":0,"failureMessages":[]},{"ancestorTitles":["","HtmlRenderer","Cost Events"],"fullName":" HtmlRenderer Cost Events should hide cost when option is set","status":"passed","title":"should hide cost when option is set","duration":0,"failureMessages":[]},{"ancestorTitles":["","HtmlRenderer","Error Events"],"fullName":" HtmlRenderer Error Events should render errors with appropriate structure","status":"passed","title":"should render errors with appropriate structure","duration":1,"failureMessages":[]},{"ancestorTitles":["","HtmlRenderer","Error Events"],"fullName":" HtmlRenderer Error Events should escape error messages","status":"passed","title":"should escape error messages","duration":0,"failureMessages":[]},{"ancestorTitles":["","HtmlRenderer","Debug Events"],"fullName":" HtmlRenderer Debug Events should render debug information in pre-formatted block","status":"failed","title":"should render debug information in pre-formatted block","duration":0,"failureMessages":["expected '<div class=\"debug-info\">\\n  <span cla…' to contain '\"key\": \"value\"'"],"location":{"line":375,"column":22}},{"ancestorTitles":["","HtmlRenderer","Debug Events"],"fullName":" HtmlRenderer Debug Events should escape debug content","status":"failed","title":"should escape debug content","duration":2,"failureMessages":["expected '<div class=\"debug-info\">\\n  <span cla…' to contain '&lt;script&gt;alert(&quot;xss&quot;)&…'"],"location":{"line":387,"column":22}},{"ancestorTitles":["","HtmlRenderer","Debug Events"],"fullName":" HtmlRenderer Debug Events should hide debug when option is set","status":"passed","title":"should hide debug when option is set","duration":0,"failureMessages":[]},{"ancestorTitles":["","HtmlRenderer","Debug Events"],"fullName":" HtmlRenderer Debug Events should handle circular references in debug data","status":"failed","title":"should handle circular references in debug data","duration":4,"failureMessages":["expected [Function] to not throw an error but 'TypeError: Converting circular struct…' was thrown"],"location":{"line":415,"column":48}},{"ancestorTitles":["","HtmlRenderer","Unknown Events"],"fullName":" HtmlRenderer Unknown Events should render unknown event types gracefully","status":"failed","title":"should render unknown event types gracefully","duration":0,"failureMessages":["expected '<div class=\"unknown-event\">\\n  <span …' to contain '\"t\": \"future-event-type\"'"],"location":{"line":431,"column":22}},{"ancestorTitles":["","HtmlRenderer","Batch Rendering"],"fullName":" HtmlRenderer Batch Rendering should render multiple events in batch","status":"passed","title":"should render multiple events in batch","duration":0,"failureMessages":[]},{"ancestorTitles":["","HtmlRenderer","Flush"],"fullName":" HtmlRenderer Flush should return empty string when no pending tools","status":"passed","title":"should return empty string when no pending tools","duration":0,"failureMessages":[]},{"ancestorTitles":["","HtmlRenderer","Flush"],"fullName":" HtmlRenderer Flush should close open tool executions","status":"passed","title":"should close open tool executions","duration":1,"failureMessages":[]},{"ancestorTitles":["","HtmlRenderer","Flush"],"fullName":" HtmlRenderer Flush should handle multiple open tools","status":"passed","title":"should handle multiple open tools","duration":0,"failureMessages":[]},{"ancestorTitles":["","HtmlRenderer","Flush"],"fullName":" HtmlRenderer Flush should clear tool stack after flush","status":"passed","title":"should clear tool stack after flush","duration":0,"failureMessages":[]},{"ancestorTitles":["","HtmlRenderer","Edge Cases"],"fullName":" HtmlRenderer Edge Cases should handle missing text fields gracefully","status":"failed","title":"should handle missing text fields gracefully","duration":3,"failureMessages":["expected [Function] to not throw an error but 'TypeError: Cannot read properties of …' was thrown"],"location":{"line":505,"column":48}},{"ancestorTitles":["","HtmlRenderer","Edge Cases"],"fullName":" HtmlRenderer Edge Cases should handle very long text without issues","status":"passed","title":"should handle very long text without issues","duration":0,"failureMessages":[]},{"ancestorTitles":["","HtmlRenderer","Edge Cases"],"fullName":" HtmlRenderer Edge Cases should handle complex nested markdown-like formatting","status":"failed","title":"should handle complex nested markdown-like formatting","duration":1,"failureMessages":["expected '<div class=\"message message-assistant…' to contain '<strong>Bold with <em>nested italic</…'"],"location":{"line":529,"column":22}},{"ancestorTitles":["","HtmlRenderer","Edge Cases"],"fullName":" HtmlRenderer Edge Cases should handle special characters in tool names","status":"passed","title":"should handle special characters in tool names","duration":0,"failureMessages":[]},{"ancestorTitles":["","HtmlRenderer","Security"],"fullName":" HtmlRenderer Security should prevent all common XSS vectors","status":"failed","title":"should prevent all common XSS vectors","duration":1,"failureMessages":["expected '<div class=\"message message-user\">\\n …' not to contain 'onerror='"],"location":{"line":579,"column":28}},{"ancestorTitles":["","HtmlRenderer","Security"],"fullName":" HtmlRenderer Security should escape HTML attributes properly","status":"failed","title":"should escape HTML attributes properly","duration":0,"failureMessages":["expected '<div class=\"tool-execution\" data-tool…' not to contain 'onmouseover='"],"location":{"line":595,"column":26}},{"ancestorTitles":["","HtmlRenderer","Security"],"fullName":" HtmlRenderer Security should handle HTML entity attacks","status":"passed","title":"should handle HTML entity attacks","duration":0,"failureMessages":[]},{"ancestorTitles":["","HtmlRenderer","Security"],"fullName":" HtmlRenderer Security should handle unicode and emoji correctly","status":"passed","title":"should handle unicode and emoji correctly","duration":1,"failureMessages":[]},{"ancestorTitles":["","HtmlRenderer","Complex HTML Generation"],"fullName":" HtmlRenderer Complex HTML Generation should generate well-formed HTML for nested structures","status":"passed","title":"should generate well-formed HTML for nested structures","duration":0,"failureMessages":[]},{"ancestorTitles":["","HtmlRenderer","Complex HTML Generation"],"fullName":" HtmlRenderer Complex HTML Generation should handle very large debug objects","status":"passed","title":"should handle very large debug objects","duration":2,"failureMessages":[]},{"ancestorTitles":["","HtmlRenderer","Performance and Memory"],"fullName":" HtmlRenderer Performance and Memory should handle thousands of events without memory issues","status":"passed","title":"should handle thousands of events without memory issues","duration":11,"failureMessages":[]},{"ancestorTitles":["","HtmlRenderer","Edge Cases with Missing Data"],"fullName":" HtmlRenderer Edge Cases with Missing Data should handle all fields being undefined","status":"failed","title":"should handle all fields being undefined","duration":1,"failureMessages":["expected [Function] to not throw an error but 'TypeError: Cannot read properties of …' was thrown"],"location":{"line":714,"column":57}},{"ancestorTitles":["","HtmlRenderer","Edge Cases with Missing Data"],"fullName":" HtmlRenderer Edge Cases with Missing Data should handle null values in all event types","status":"failed","title":"should handle null values in all event types","duration":0,"failureMessages":["expected [Function] to not throw an error but 'TypeError: Cannot read properties of …' was thrown"],"location":{"line":727,"column":50}},{"ancestorTitles":["","HtmlRenderer","Edge Cases with Missing Data"],"fullName":" HtmlRenderer Edge Cases with Missing Data should handle NaN and Infinity in cost events","status":"passed","title":"should handle NaN and Infinity in cost events","duration":0,"failureMessages":[]},{"ancestorTitles":["","HtmlRenderer","Tool Lifecycle Edge Cases"],"fullName":" HtmlRenderer Tool Lifecycle Edge Cases should handle tool events out of order","status":"passed","title":"should handle tool events out of order","duration":0,"failureMessages":[]},{"ancestorTitles":["","HtmlRenderer","Tool Lifecycle Edge Cases"],"fullName":" HtmlRenderer Tool Lifecycle Edge Cases should handle deeply nested tool output","status":"passed","title":"should handle deeply nested tool output","duration":0,"failureMessages":[]},{"ancestorTitles":["","HtmlRenderer","Integration with Real Fixtures"],"fullName":" HtmlRenderer Integration with Real Fixtures should handle complex mixed event sequences","status":"passed","title":"should handle complex mixed event sequences","duration":1,"failureMessages":[]}],"startTime":1752838808213,"endTime":1752838808253,"status":"failed","message":"","name":"/Users/carl/Development/agents/agent-stream-fmt/tests/render/html.test.ts"},{"assertionResults":[{"ancestorTitles":["","Rendering Performance","ANSI Renderer Performance"],"fullName":" Rendering Performance ANSI Renderer Performance should maintain 50k+ events/second throughput","status":"passed","title":"should maintain 50k+ events/second throughput","duration":86,"failureMessages":[]},{"ancestorTitles":["","Rendering Performance","ANSI Renderer Performance"],"fullName":" Rendering Performance ANSI Renderer Performance should handle batch rendering efficiently","status":"passed","title":"should handle batch rendering efficiently","duration":14,"failureMessages":[]},{"ancestorTitles":["","Rendering Performance","ANSI Renderer Performance"],"fullName":" Rendering Performance ANSI Renderer Performance should maintain performance with complex formatting","status":"passed","title":"should maintain performance with complex formatting","duration":91,"failureMessages":[]},{"ancestorTitles":["","Rendering Performance","ANSI Renderer Performance"],"fullName":" Rendering Performance ANSI Renderer Performance should not degrade with tool tracking","status":"passed","title":"should not degrade with tool tracking","duration":15,"failureMessages":[]},{"ancestorTitles":["","Rendering Performance","ANSI Renderer Performance"],"fullName":" Rendering Performance ANSI Renderer Performance should handle collapsed tools efficiently","status":"passed","title":"should handle collapsed tools efficiently","duration":52,"failureMessages":[]},{"ancestorTitles":["","Rendering Performance","HTML Renderer Performance"],"fullName":" Rendering Performance HTML Renderer Performance should maintain 50k+ events/second throughput","status":"passed","title":"should maintain 50k+ events/second throughput","duration":47,"failureMessages":[]},{"ancestorTitles":["","Rendering Performance","HTML Renderer Performance"],"fullName":" Rendering Performance HTML Renderer Performance should handle HTML escaping without significant overhead","status":"passed","title":"should handle HTML escaping without significant overhead","duration":37,"failureMessages":[]},{"ancestorTitles":["","Rendering Performance","Memory Usage"],"fullName":" Rendering Performance Memory Usage should maintain constant memory for streaming (ANSI)","status":"passed","title":"should maintain constant memory for streaming (ANSI)","duration":85,"failureMessages":[]},{"ancestorTitles":["","Rendering Performance","Memory Usage"],"fullName":" Rendering Performance Memory Usage should not leak memory with tool tracking","status":"passed","title":"should not leak memory with tool tracking","duration":3,"failureMessages":[]},{"ancestorTitles":["","Rendering Performance","Latency"],"fullName":" Rendering Performance Latency should have low latency for first output","status":"passed","title":"should have low latency for first output","duration":0,"failureMessages":[]},{"ancestorTitles":["","Rendering Performance","Latency"],"fullName":" Rendering Performance Latency should maintain low latency under load","status":"passed","title":"should maintain low latency under load","duration":11,"failureMessages":[]},{"ancestorTitles":["","Rendering Performance","Edge Cases Performance"],"fullName":" Rendering Performance Edge Cases Performance should handle very long lines efficiently","status":"passed","title":"should handle very long lines efficiently","duration":13,"failureMessages":[]},{"ancestorTitles":["","Rendering Performance","Edge Cases Performance"],"fullName":" Rendering Performance Edge Cases Performance should handle rapid tool switches efficiently","status":"passed","title":"should handle rapid tool switches efficiently","duration":16,"failureMessages":[]},{"ancestorTitles":["","Rendering Performance","Edge Cases Performance"],"fullName":" Rendering Performance Edge Cases Performance should handle mixed event types efficiently","status":"passed","title":"should handle mixed event types efficiently","duration":28,"failureMessages":[]},{"ancestorTitles":["","Rendering Performance","Comparative Performance"],"fullName":" Rendering Performance Comparative Performance should have similar performance between ANSI and HTML renderers","status":"passed","title":"should have similar performance between ANSI and HTML renderers","duration":15,"failureMessages":[]},{"ancestorTitles":["","Rendering Performance","Streaming Performance"],"fullName":" Rendering Performance Streaming Performance should maintain performance with continuous streaming","status":"passed","title":"should maintain performance with continuous streaming","duration":1001,"failureMessages":[]},{"ancestorTitles":["","Rendering Performance","Streaming Performance"],"fullName":" Rendering Performance Streaming Performance should handle backpressure gracefully","status":"passed","title":"should handle backpressure gracefully","duration":90,"failureMessages":[]},{"ancestorTitles":["","Rendering Performance","Real-world Scenarios"],"fullName":" Rendering Performance Real-world Scenarios should handle Claude-style conversation efficiently","status":"passed","title":"should handle Claude-style conversation efficiently","duration":2,"failureMessages":[]},{"ancestorTitles":["","Rendering Performance","Real-world Scenarios"],"fullName":" Rendering Performance Real-world Scenarios should handle build tool output efficiently","status":"passed","title":"should handle build tool output efficiently","duration":4,"failureMessages":[]},{"ancestorTitles":["","Rendering Performance","Memory Leak Prevention"],"fullName":" Rendering Performance Memory Leak Prevention should not leak memory with exception handling","status":"passed","title":"should not leak memory with exception handling","duration":339,"failureMessages":[]},{"ancestorTitles":["","Rendering Performance","Memory Leak Prevention"],"fullName":" Rendering Performance Memory Leak Prevention should clean up tool state to prevent memory growth","status":"failed","title":"should clean up tool state to prevent memory growth","duration":74,"failureMessages":["expected 57.678367614746094 to be less than 50"],"location":{"line":665,"column":19}},{"ancestorTitles":["","Rendering Performance","Startup Performance"],"fullName":" Rendering Performance Startup Performance should have fast initialization time","status":"passed","title":"should have fast initialization time","duration":0,"failureMessages":[]},{"ancestorTitles":["","Rendering Performance","Startup Performance"],"fullName":" Rendering Performance Startup Performance should render first event quickly after initialization","status":"passed","title":"should render first event quickly after initialization","duration":1,"failureMessages":[]}],"startTime":1752838808213,"endTime":1752838810237,"status":"failed","message":"","name":"/Users/carl/Development/agents/agent-stream-fmt/tests/render/performance.test.ts"}]}
