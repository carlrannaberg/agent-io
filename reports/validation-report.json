{
  "timestamp": "2025-07-19T20:46:55.580Z",
  "vendors": [
    {
      "vendor": "claude",
      "hasDirectory": true,
      "files": [
        {
          "vendor": "claude",
          "filename": "basic-message.jsonl",
          "totalLines": 3,
          "validLines": 3,
          "parseResults": [
            {
              "line": "{\"type\":\"message\",\"role\":\"user\",\"content\":\"write a hello world function\"}",
              "lineNumber": 1,
              "detected": true,
              "parseTime": 0.14308400000000177,
              "eventCount": 1,
              "detectedVendor": "claude",
              "events": [
                {
                  "t": "msg",
                  "role": "user",
                  "text": "write a hello world function"
                }
              ]
            },
            {
              "line": "{\"type\":\"message\",\"role\":\"assistant\",\"content\":\"Here's a simple hello world function in JavaScript:\\n\\n```javascript\\nfunction helloWorld() {\\n  console.log('Hello, World!');\\n}\\n\\nhelloWorld();\\n```\"}",
              "lineNumber": 2,
              "detected": true,
              "parseTime": 0.009292000000002076,
              "eventCount": 1,
              "detectedVendor": "claude",
              "events": [
                {
                  "t": "msg",
                  "role": "assistant",
                  "text": "Here's a simple hello world function in JavaScript:\n\n```javascript\nfunction helloWorld() {\n  console.log('Hello, World!');\n}\n\nhelloWorld();\n```"
                }
              ]
            },
            {
              "line": "{\"type\":\"usage\",\"input_tokens\":12,\"output_tokens\":35,\"total_tokens\":47}",
              "lineNumber": 3,
              "detected": true,
              "parseTime": 0.047624999999996476,
              "eventCount": 1,
              "detectedVendor": "claude",
              "events": [
                {
                  "t": "cost",
                  "deltaUsd": 0.000561
                }
              ]
            }
          ],
          "averageParseTime": 0.07219433333333332,
          "totalParseTime": 0.21658299999999997,
          "linesPerSecond": 13851.502657179928,
          "errors": []
        },
        {
          "vendor": "claude",
          "filename": "complex-session.jsonl",
          "totalLines": 9,
          "validLines": 9,
          "parseResults": [
            {
              "line": "{\"type\":\"message\",\"role\":\"user\",\"content\":\"I need to create a REST API with user authentication\"}",
              "lineNumber": 1,
              "detected": true,
              "parseTime": 0.018874999999994202,
              "eventCount": 1,
              "detectedVendor": "claude",
              "events": [
                {
                  "t": "msg",
                  "role": "user",
                  "text": "I need to create a REST API with user authentication"
                }
              ]
            },
            {
              "line": "{\"type\":\"message\",\"role\":\"assistant\",\"content\":\"I'll help you create a REST API with user authentication. Let me first understand your requirements.\"}",
              "lineNumber": 2,
              "detected": true,
              "parseTime": 0.011207999999996332,
              "eventCount": 1,
              "detectedVendor": "claude",
              "events": [
                {
                  "t": "msg",
                  "role": "assistant",
                  "text": "I'll help you create a REST API with user authentication. Let me first understand your requirements."
                }
              ]
            },
            {
              "line": "{\"type\":\"tool_use\",\"id\":\"tool_1\",\"name\":\"create_file\",\"input\":{\"path\":\"server.js\",\"content\":\"const express = require('express');\"}}",
              "lineNumber": 3,
              "detected": true,
              "parseTime": 0.031084000000006995,
              "eventCount": 1,
              "detectedVendor": "claude",
              "events": [
                {
                  "t": "tool",
                  "name": "create_file",
                  "phase": "start",
                  "text": "{\n  \"path\": \"server.js\",\n  \"content\": \"const express = require('express');\"\n}"
                }
              ]
            },
            {
              "line": "{\"type\":\"tool_result\",\"tool_use_id\":\"tool_1\",\"content\":\"File created successfully\"}",
              "lineNumber": 4,
              "detected": true,
              "parseTime": 0.02487499999999443,
              "eventCount": 1,
              "detectedVendor": "claude",
              "events": [
                {
                  "t": "tool",
                  "name": "tool_1",
                  "phase": "end",
                  "exitCode": 0
                }
              ]
            },
            {
              "line": "{\"type\":\"message\",\"role\":\"assistant\",\"content\":\"I've started creating your REST API. Let me add the authentication middleware.\"}",
              "lineNumber": 5,
              "detected": true,
              "parseTime": 0.004041999999998325,
              "eventCount": 1,
              "detectedVendor": "claude",
              "events": [
                {
                  "t": "msg",
                  "role": "assistant",
                  "text": "I've started creating your REST API. Let me add the authentication middleware."
                }
              ]
            },
            {
              "line": "{\"type\":\"tool_use\",\"id\":\"tool_2\",\"name\":\"create_file\",\"input\":{\"path\":\"auth.js\",\"content\":\"const jwt = require('jsonwebtoken');\"}}",
              "lineNumber": 6,
              "detected": true,
              "parseTime": 0.012790999999992891,
              "eventCount": 1,
              "detectedVendor": "claude",
              "events": [
                {
                  "t": "tool",
                  "name": "create_file",
                  "phase": "start",
                  "text": "{\n  \"path\": \"auth.js\",\n  \"content\": \"const jwt = require('jsonwebtoken');\"\n}"
                }
              ]
            },
            {
              "line": "{\"type\":\"tool_result\",\"tool_use_id\":\"tool_2\",\"content\":\"File created successfully\"}",
              "lineNumber": 7,
              "detected": true,
              "parseTime": 0.009541999999996165,
              "eventCount": 1,
              "detectedVendor": "claude",
              "events": [
                {
                  "t": "tool",
                  "name": "tool_2",
                  "phase": "end",
                  "exitCode": 0
                }
              ]
            },
            {
              "line": "{\"type\":\"message\",\"role\":\"assistant\",\"content\":\"Great! I've set up the basic structure with authentication middleware.\"}",
              "lineNumber": 8,
              "detected": true,
              "parseTime": 0.005665999999990845,
              "eventCount": 1,
              "detectedVendor": "claude",
              "events": [
                {
                  "t": "msg",
                  "role": "assistant",
                  "text": "Great! I've set up the basic structure with authentication middleware."
                }
              ]
            },
            {
              "line": "{\"type\":\"usage\",\"input_tokens\":125,\"output_tokens\":245,\"total_tokens\":370}",
              "lineNumber": 9,
              "detected": true,
              "parseTime": 0.006833000000000311,
              "eventCount": 1,
              "detectedVendor": "claude",
              "events": [
                {
                  "t": "cost",
                  "deltaUsd": 0.00405
                }
              ]
            }
          ],
          "averageParseTime": 0.016588000000000293,
          "totalParseTime": 0.14929200000000264,
          "linesPerSecond": 60284.54304316267,
          "errors": []
        },
        {
          "vendor": "claude",
          "filename": "error-handling.jsonl",
          "totalLines": 5,
          "validLines": 3,
          "parseResults": [
            {
              "line": "{\"type\":\"message\",\"role\":\"user\",\"content\":\"explain this error: TypeError: Cannot read property 'x' of undefined\"}",
              "lineNumber": 1,
              "detected": true,
              "parseTime": 0.009500000000002728,
              "eventCount": 1,
              "detectedVendor": "claude",
              "events": [
                {
                  "t": "msg",
                  "role": "user",
                  "text": "explain this error: TypeError: Cannot read property 'x' of undefined"
                }
              ]
            },
            {
              "line": "{invalid json here",
              "lineNumber": 2,
              "detected": false,
              "parseTime": 0,
              "eventCount": 0,
              "error": "Invalid JSON"
            },
            {
              "line": "{\"type\":\"message\",\"role\":\"assistant\",\"content\":\"This error occurs when you try to access a property on an undefined value.\"}",
              "lineNumber": 3,
              "detected": true,
              "parseTime": 0.0040000000000048885,
              "eventCount": 1,
              "detectedVendor": "claude",
              "events": [
                {
                  "t": "msg",
                  "role": "assistant",
                  "text": "This error occurs when you try to access a property on an undefined value."
                }
              ]
            },
            {
              "line": "{\"type\":\"error\",\"level\":\"warning\",\"message\":\"Parsing error detected\"}",
              "lineNumber": 4,
              "detected": true,
              "parseTime": 0.015584000000004039,
              "eventCount": 1,
              "detectedVendor": "claude",
              "events": [
                {
                  "t": "error",
                  "message": "Parsing error detected"
                }
              ]
            },
            {
              "line": "{\"broken\":}",
              "lineNumber": 5,
              "detected": false,
              "parseTime": 0,
              "eventCount": 0,
              "error": "Invalid JSON"
            }
          ],
          "averageParseTime": 0.014175000000000182,
          "totalParseTime": 0.07087500000000091,
          "linesPerSecond": 70546.73721340297,
          "errors": [
            {
              "vendor": "claude",
              "file": "error-handling.jsonl",
              "line": 2,
              "type": "json",
              "message": "Invalid JSON: Expected property name or '}' in JSON at position 1 (line 1 column 2)"
            },
            {
              "vendor": "claude",
              "file": "error-handling.jsonl",
              "line": 5,
              "type": "json",
              "message": "Invalid JSON: Unexpected token '}', \"{\"broken\":}\" is not valid JSON"
            }
          ]
        },
        {
          "vendor": "claude",
          "filename": "tool-use-with-output.jsonl",
          "totalLines": 4,
          "validLines": 4,
          "parseResults": [
            {
              "line": "{\"type\":\"message\",\"role\":\"user\",\"content\":\"run ls and show results\"}",
              "lineNumber": 1,
              "detected": true,
              "parseTime": 0.010332999999988601,
              "eventCount": 1,
              "detectedVendor": "claude",
              "events": [
                {
                  "t": "msg",
                  "role": "user",
                  "text": "run ls and show results"
                }
              ]
            },
            {
              "line": "{\"type\":\"tool_use\",\"id\":\"tool_456\",\"name\":\"bash\",\"input\":{\"command\":\"ls\"}}",
              "lineNumber": 2,
              "detected": true,
              "parseTime": 0.009165999999993346,
              "eventCount": 1,
              "detectedVendor": "claude",
              "events": [
                {
                  "t": "tool",
                  "name": "bash",
                  "phase": "start",
                  "text": "{\n  \"command\": \"ls\"\n}"
                }
              ]
            },
            {
              "line": "{\"type\":\"tool_result\",\"tool_use_id\":\"tool_456\",\"content\":\"stdout\",\"output\":\"file1.txt\\nfile2.txt\\nfile3.txt\\nsubdir/\\nREADME.md\"}",
              "lineNumber": 3,
              "detected": true,
              "parseTime": 0.0060829999999896245,
              "eventCount": 2,
              "detectedVendor": "claude",
              "events": [
                {
                  "t": "tool",
                  "name": "tool_456",
                  "phase": "stdout",
                  "text": "file1.txt\nfile2.txt\nfile3.txt\nsubdir/\nREADME.md"
                },
                {
                  "t": "tool",
                  "name": "tool_456",
                  "phase": "end",
                  "exitCode": 0
                }
              ]
            },
            {
              "line": "{\"type\":\"message\",\"role\":\"assistant\",\"content\":\"I've listed the directory contents. You have 4 files and 1 subdirectory.\"}",
              "lineNumber": 4,
              "detected": true,
              "parseTime": 0.00433400000000006,
              "eventCount": 1,
              "detectedVendor": "claude",
              "events": [
                {
                  "t": "msg",
                  "role": "assistant",
                  "text": "I've listed the directory contents. You have 4 files and 1 subdirectory."
                }
              ]
            }
          ],
          "averageParseTime": 0.009395749999999481,
          "totalParseTime": 0.037582999999997924,
          "linesPerSecond": 106431.09916718252,
          "errors": []
        },
        {
          "vendor": "claude",
          "filename": "tool-use.jsonl",
          "totalLines": 5,
          "validLines": 5,
          "parseResults": [
            {
              "line": "{\"type\":\"message\",\"role\":\"user\",\"content\":\"run npm test and show results\"}",
              "lineNumber": 1,
              "detected": true,
              "parseTime": 0.0037920000000042364,
              "eventCount": 1,
              "detectedVendor": "claude",
              "events": [
                {
                  "t": "msg",
                  "role": "user",
                  "text": "run npm test and show results"
                }
              ]
            },
            {
              "line": "{\"type\":\"tool_use\",\"id\":\"tool_123\",\"name\":\"bash\",\"input\":{\"command\":\"npm test\"}}",
              "lineNumber": 2,
              "detected": true,
              "parseTime": 0.004457999999999629,
              "eventCount": 1,
              "detectedVendor": "claude",
              "events": [
                {
                  "t": "tool",
                  "name": "bash",
                  "phase": "start",
                  "text": "{\n  \"command\": \"npm test\"\n}"
                }
              ]
            },
            {
              "line": "{\"type\":\"tool_result\",\"tool_use_id\":\"tool_123\",\"content\":\"stdout\",\"output\":\"Test Suites: 3 passed, 3 total\\nTests: 15 passed, 15 total\\nTime: 2.341s\"}",
              "lineNumber": 3,
              "detected": true,
              "parseTime": 0.004208000000005541,
              "eventCount": 2,
              "detectedVendor": "claude",
              "events": [
                {
                  "t": "tool",
                  "name": "tool_123",
                  "phase": "stdout",
                  "text": "Test Suites: 3 passed, 3 total\nTests: 15 passed, 15 total\nTime: 2.341s"
                },
                {
                  "t": "tool",
                  "name": "tool_123",
                  "phase": "end",
                  "exitCode": 0
                }
              ]
            },
            {
              "line": "{\"type\":\"message\",\"role\":\"assistant\",\"content\":\"I ran the tests successfully! All 15 tests across 3 test suites passed.\"}",
              "lineNumber": 4,
              "detected": true,
              "parseTime": 0.006833000000000311,
              "eventCount": 1,
              "detectedVendor": "claude",
              "events": [
                {
                  "t": "msg",
                  "role": "assistant",
                  "text": "I ran the tests successfully! All 15 tests across 3 test suites passed."
                }
              ]
            },
            {
              "line": "{\"type\":\"usage\",\"input_tokens\":18,\"output_tokens\":52,\"total_tokens\":70}",
              "lineNumber": 5,
              "detected": true,
              "parseTime": 0.004249999999998977,
              "eventCount": 1,
              "detectedVendor": "claude",
              "events": [
                {
                  "t": "cost",
                  "deltaUsd": 0.000834
                }
              ]
            }
          ],
          "averageParseTime": 0.005691799999999603,
          "totalParseTime": 0.028458999999998014,
          "linesPerSecond": 175691.34544433566,
          "errors": []
        }
      ],
      "totalLines": 26,
      "totalParseTime": 0.5027919999999995,
      "averageLinesPerSecond": 51711.244411207874,
      "detectionAccuracy": 100,
      "errors": [
        {
          "vendor": "claude",
          "file": "error-handling.jsonl",
          "line": 2,
          "type": "json",
          "message": "Invalid JSON: Expected property name or '}' in JSON at position 1 (line 1 column 2)"
        },
        {
          "vendor": "claude",
          "file": "error-handling.jsonl",
          "line": 5,
          "type": "json",
          "message": "Invalid JSON: Unexpected token '}', \"{\"broken\":}\" is not valid JSON"
        }
      ]
    },
    {
      "vendor": "gemini",
      "hasDirectory": true,
      "files": [
        {
          "vendor": "gemini",
          "filename": "basic-content.jsonl",
          "totalLines": 3,
          "validLines": 3,
          "parseResults": [
            {
              "line": "{\"type\":\"user\",\"content\":\"What is recursion?\"}",
              "lineNumber": 1,
              "detected": true,
              "parseTime": 0.04837499999999295,
              "eventCount": 1,
              "detectedVendor": "gemini",
              "events": [
                {
                  "t": "msg",
                  "role": "user",
                  "text": "What is recursion?"
                }
              ]
            },
            {
              "line": "{\"type\":\"assistant\",\"content\":\"Recursion is a programming concept where a function calls itself to solve a smaller version of the same problem.\"}",
              "lineNumber": 2,
              "detected": true,
              "parseTime": 0.003958999999994717,
              "eventCount": 1,
              "detectedVendor": "gemini",
              "events": [
                {
                  "t": "msg",
                  "role": "assistant",
                  "text": "Recursion is a programming concept where a function calls itself to solve a smaller version of the same problem."
                }
              ]
            },
            {
              "line": "{\"type\":\"metadata\",\"usage\":{\"input_tokens\":8,\"output_tokens\":25,\"total_tokens\":33}}",
              "lineNumber": 3,
              "detected": true,
              "parseTime": 0.021458000000009747,
              "eventCount": 1,
              "detectedVendor": "gemini",
              "events": [
                {
                  "t": "cost",
                  "deltaUsd": 0.00008300000000000001
                }
              ]
            }
          ],
          "averageParseTime": 0.02747233333333554,
          "totalParseTime": 0.08241700000000662,
          "linesPerSecond": 36400.25722848149,
          "errors": []
        },
        {
          "vendor": "gemini",
          "filename": "code-generation.jsonl",
          "totalLines": 3,
          "validLines": 3,
          "parseResults": [
            {
              "line": "{\"type\":\"user\",\"content\":\"Create a Python function to calculate factorial\"}",
              "lineNumber": 1,
              "detected": true,
              "parseTime": 0.006417000000013218,
              "eventCount": 1,
              "detectedVendor": "gemini",
              "events": [
                {
                  "t": "msg",
                  "role": "user",
                  "text": "Create a Python function to calculate factorial"
                }
              ]
            },
            {
              "line": "{\"type\":\"assistant\",\"content\":\"```python\\ndef factorial(n):\\n    if n <= 1:\\n        return 1\\n    return n * factorial(n - 1)\\n```\"}",
              "lineNumber": 2,
              "detected": true,
              "parseTime": 0.0030830000000037217,
              "eventCount": 1,
              "detectedVendor": "gemini",
              "events": [
                {
                  "t": "msg",
                  "role": "assistant",
                  "text": "```python\ndef factorial(n):\n    if n <= 1:\n        return 1\n    return n * factorial(n - 1)\n```"
                }
              ]
            },
            {
              "line": "{\"type\":\"metadata\",\"usage\":{\"input_tokens\":12,\"output_tokens\":38,\"total_tokens\":50}}",
              "lineNumber": 3,
              "detected": true,
              "parseTime": 0.0037909999999925503,
              "eventCount": 1,
              "detectedVendor": "gemini",
              "events": [
                {
                  "t": "cost",
                  "deltaUsd": 0.000126
                }
              ]
            }
          ],
          "averageParseTime": 0.005458333333332159,
          "totalParseTime": 0.016374999999996476,
          "linesPerSecond": 183206.10687026844,
          "errors": []
        }
      ],
      "totalLines": 6,
      "totalParseTime": 0.0987920000000031,
      "averageLinesPerSecond": 60733.662644746655,
      "detectionAccuracy": 100,
      "errors": []
    },
    {
      "vendor": "amp",
      "hasDirectory": true,
      "files": [
        {
          "vendor": "amp",
          "filename": "build-process.jsonl",
          "totalLines": 5,
          "validLines": 5,
          "parseResults": [
            {
              "line": "{\"phase\":\"start\",\"task\":\"build\",\"timestamp\":\"2024-01-01T10:00:00Z\"}",
              "lineNumber": 1,
              "detected": true,
              "parseTime": 0.04049999999999443,
              "eventCount": 1,
              "detectedVendor": "amp",
              "events": [
                {
                  "t": "tool",
                  "name": "build",
                  "phase": "start"
                }
              ]
            },
            {
              "line": "{\"phase\":\"output\",\"task\":\"build\",\"type\":\"stdout\",\"content\":\"Running tests...\"}",
              "lineNumber": 2,
              "detected": true,
              "parseTime": 0.015375000000005912,
              "eventCount": 1,
              "detectedVendor": "amp",
              "events": [
                {
                  "t": "tool",
                  "name": "build",
                  "phase": "stdout",
                  "text": "Running tests..."
                }
              ]
            },
            {
              "line": "{\"phase\":\"output\",\"task\":\"build\",\"type\":\"stdout\",\"content\":\"All tests passed\"}",
              "lineNumber": 3,
              "detected": true,
              "parseTime": 0.003416999999998893,
              "eventCount": 1,
              "detectedVendor": "amp",
              "events": [
                {
                  "t": "tool",
                  "name": "build",
                  "phase": "stdout",
                  "text": "All tests passed"
                }
              ]
            },
            {
              "line": "{\"phase\":\"output\",\"task\":\"build\",\"type\":\"stdout\",\"content\":\"Creating production build...\"}",
              "lineNumber": 4,
              "detected": true,
              "parseTime": 0.0030000000000001137,
              "eventCount": 1,
              "detectedVendor": "amp",
              "events": [
                {
                  "t": "tool",
                  "name": "build",
                  "phase": "stdout",
                  "text": "Creating production build..."
                }
              ]
            },
            {
              "line": "{\"phase\":\"end\",\"task\":\"build\",\"timestamp\":\"2024-01-01T10:02:00Z\",\"exitCode\":0}",
              "lineNumber": 5,
              "detected": true,
              "parseTime": 0.013958999999999833,
              "eventCount": 1,
              "detectedVendor": "amp",
              "events": [
                {
                  "t": "tool",
                  "name": "build",
                  "phase": "end",
                  "exitCode": 0
                }
              ]
            }
          ],
          "averageParseTime": 0.01709160000000054,
          "totalParseTime": 0.0854580000000027,
          "linesPerSecond": 58508.273069810224,
          "errors": []
        },
        {
          "vendor": "amp",
          "filename": "simple-task.jsonl",
          "totalLines": 4,
          "validLines": 4,
          "parseResults": [
            {
              "line": "{\"phase\":\"start\",\"task\":\"compile\",\"timestamp\":\"2024-01-01T10:00:00Z\"}",
              "lineNumber": 1,
              "detected": true,
              "parseTime": 0.005583999999998923,
              "eventCount": 1,
              "detectedVendor": "amp",
              "events": [
                {
                  "t": "tool",
                  "name": "compile",
                  "phase": "start"
                }
              ]
            },
            {
              "line": "{\"phase\":\"output\",\"task\":\"compile\",\"type\":\"stdout\",\"content\":\"Compiling project...\"}",
              "lineNumber": 2,
              "detected": true,
              "parseTime": 0.0035829999999918982,
              "eventCount": 1,
              "detectedVendor": "amp",
              "events": [
                {
                  "t": "tool",
                  "name": "compile",
                  "phase": "stdout",
                  "text": "Compiling project..."
                }
              ]
            },
            {
              "line": "{\"phase\":\"output\",\"task\":\"compile\",\"type\":\"stdout\",\"content\":\"Build successful\"}",
              "lineNumber": 3,
              "detected": true,
              "parseTime": 0.0030000000000001137,
              "eventCount": 1,
              "detectedVendor": "amp",
              "events": [
                {
                  "t": "tool",
                  "name": "compile",
                  "phase": "stdout",
                  "text": "Build successful"
                }
              ]
            },
            {
              "line": "{\"phase\":\"end\",\"task\":\"compile\",\"timestamp\":\"2024-01-01T10:00:30Z\",\"exitCode\":0}",
              "lineNumber": 4,
              "detected": true,
              "parseTime": 0.0085420000000056,
              "eventCount": 1,
              "detectedVendor": "amp",
              "events": [
                {
                  "t": "tool",
                  "name": "compile",
                  "phase": "end",
                  "exitCode": 0
                }
              ]
            }
          ],
          "averageParseTime": 0.006312499999999943,
          "totalParseTime": 0.025249999999999773,
          "linesPerSecond": 158415.84158415985,
          "errors": []
        },
        {
          "vendor": "amp",
          "filename": "test-execution.jsonl",
          "totalLines": 5,
          "validLines": 5,
          "parseResults": [
            {
              "line": "{\"phase\":\"start\",\"task\":\"test\",\"timestamp\":\"2024-01-01T10:00:00Z\"}",
              "lineNumber": 1,
              "detected": true,
              "parseTime": 0.006375000000005571,
              "eventCount": 1,
              "detectedVendor": "amp",
              "events": [
                {
                  "t": "tool",
                  "name": "test",
                  "phase": "start"
                }
              ]
            },
            {
              "line": "{\"phase\":\"output\",\"task\":\"test\",\"type\":\"stdout\",\"content\":\"Running unit tests...\"}",
              "lineNumber": 2,
              "detected": true,
              "parseTime": 0.004375000000010232,
              "eventCount": 1,
              "detectedVendor": "amp",
              "events": [
                {
                  "t": "tool",
                  "name": "test",
                  "phase": "stdout",
                  "text": "Running unit tests..."
                }
              ]
            },
            {
              "line": "{\"phase\":\"output\",\"task\":\"test\",\"type\":\"stderr\",\"content\":\"Warning: Deprecated API usage\"}",
              "lineNumber": 3,
              "detected": true,
              "parseTime": 0.0030000000000001137,
              "eventCount": 1,
              "detectedVendor": "amp",
              "events": [
                {
                  "t": "tool",
                  "name": "test",
                  "phase": "stderr",
                  "text": "Warning: Deprecated API usage"
                }
              ]
            },
            {
              "line": "{\"phase\":\"output\",\"task\":\"test\",\"type\":\"stdout\",\"content\":\"15 tests passed\"}",
              "lineNumber": 4,
              "detected": true,
              "parseTime": 0.007208000000005654,
              "eventCount": 1,
              "detectedVendor": "amp",
              "events": [
                {
                  "t": "tool",
                  "name": "test",
                  "phase": "stdout",
                  "text": "15 tests passed"
                }
              ]
            },
            {
              "line": "{\"phase\":\"end\",\"task\":\"test\",\"timestamp\":\"2024-01-01T10:00:45Z\",\"exitCode\":0}",
              "lineNumber": 5,
              "detected": true,
              "parseTime": 0.003665999999995506,
              "eventCount": 1,
              "detectedVendor": "amp",
              "events": [
                {
                  "t": "tool",
                  "name": "test",
                  "phase": "end",
                  "exitCode": 0
                }
              ]
            }
          ],
          "averageParseTime": 0.005766600000001176,
          "totalParseTime": 0.02883300000000588,
          "linesPerSecond": 173412.40939198073,
          "errors": []
        }
      ],
      "totalLines": 14,
      "totalParseTime": 0.13954100000000835,
      "averageLinesPerSecond": 100328.93558165099,
      "detectionAccuracy": 100,
      "errors": []
    }
  ],
  "overallStats": {
    "totalVendors": 3,
    "totalFiles": 10,
    "totalLines": 46,
    "totalErrors": 2,
    "averagePerformance": 70924.61421253518,
    "registrySize": 3,
    "availableParsers": [
      "amp",
      "claude",
      "gemini"
    ]
  },
  "performanceBenchmarks": {
    "minLinesPerSecond": 51711.244411207874,
    "maxLinesPerSecond": 2443618.392822408,
    "averageLinesPerSecond": 70924.61421253518,
    "performanceTarget": 1000,
    "meetsTarget": true
  }
}